text(13225, 2.59, labels = "GR Upper CI = 1.102", cex = 1.2)
text(4250, 2.59, labels = "Mean Effective Samples = 42.4", cex = 1.2)
acf(mod_list_da[[1]]$samps$res_cuts[4,, 1],
main = expression("(Chain 1) DA Autocorrelation: " ~ gamma[13]))
text(32, 0.97, labels = "Lag 5 autocorrelation = 0.97", cex = 1.2)
autocorr(mcmc(mod_list_da[[1]]$samps$res_cuts[4,, 1]))
par(mfrow=c(2,2))
par(mar=c(4.1, 4.1, 4.1, 2.1))
plot(mod_list[[1]]$samps$res_cuts[3,, 1], type = "l",
ylab = expression(gamma[12]), main = expression("PX-DA Traceplot: " ~ gamma[12]),
xlab = "Iterations", ylim = c(0.9, 1.67))
lines(mcmc(mod_list[[4]]$samps$res_cuts[3,, 1]), col = 2)
lines(mcmc(mod_list[[3]]$samps$res_cuts[3,, 1]), col = 3)
lines(mcmc(mod_list[[2]]$samps$res_cuts[3,, 1]), col = 4)
text(13225, 1.64, labels = "GR Upper CI = 1.020", cex = 1.2)
text(4250, 1.64, labels = "Mean Effective Samples = 286.6", cex = 1.2)
acf(mod_list[[1]]$samps$res_cuts[3,, 1],
main = expression("(Chain 1) PX-DA Autocorrelation: " ~ gamma[12]))
text(32, 0.97, labels = "Lag 5 autocorrelation = 0.48", cex = 1.2)
autocorr(mcmc(mod_list[[1]]$samps$res_cuts[3,, 1]))
plot(mod_list_da[[1]]$samps$res_cuts[4,, 1], type = "l",
ylab = expression(gamma[13]), main = expression("DA Traceplot: " ~ gamma[13]),
xlab = "Iterations", ylim = c(1.85, 2.62))
lines(mcmc(mod_list_da[[2]]$samps$res_cuts[4,, 1 ]), col = 2)
lines(mcmc(mod_list_da[[3]]$samps$res_cuts[4,, 1 ]), col = 3)
lines(mcmc(mod_list_da[[4]]$samps$res_cuts[4,, 1 ]), col = 4)
text(13225, 2.59, labels = "GR Upper CI = 1.102", cex = 1.2)
text(4250, 2.59, labels = "Mean Effective Samples = 42.4", cex = 1.2)
acf(mod_list_da[[1]]$samps$res_cuts[4,, 1],
main = expression("(Chain 1) DA Autocorrelation: " ~ gamma[13]))
text(32, 0.97, labels = "Lag 5 autocorrelation = 0.97", cex = 1.2)
autocorr(mcmc(mod_list_da[[1]]$samps$res_cuts[4,, 1]))
par(mfrow=c(2,2))
par(mar=c(4.1, 4.1, 4.1, 2.1))
plot(mod_list[[1]]$samps$res_cuts[3,, 1], type = "l",
ylab = expression(gamma[12]), main = expression("PX-DA Traceplot: " ~ gamma[12]),
xlab = "Iterations", ylim = c(0.9, 1.67))
lines(mcmc(mod_list[[4]]$samps$res_cuts[3,, 1]), col = 2)
lines(mcmc(mod_list[[3]]$samps$res_cuts[3,, 1]), col = 3)
lines(mcmc(mod_list[[2]]$samps$res_cuts[3,, 1]), col = 4)
text(13225, 1.64, labels = "GR Upper CI = 1.020", cex = 1.2)
text(4250, 1.64, labels = "Mean Effective Samples = 286.6", cex = 1.2)
acf(mod_list[[1]]$samps$res_cuts[3,, 1],
main = expression("(Chain 1) PX-DA Autocorrelation: " ~ gamma[12]))
text(32, 0.97, labels = "Lag 5 autocorrelation = 0.48", cex = 1.2)
autocorr(mcmc(mod_list[[1]]$samps$res_cuts[3,, 1]))
plot(mod_list_da[[1]]$samps$res_cuts[4,, 1], type = "l",
ylab = expression(gamma[13]), main = expression("DA Traceplot: " ~ gamma[13]),
xlab = "Iterations", ylim = c(1.85, 2.62))
lines(mcmc(mod_list_da[[2]]$samps$res_cuts[4,, 1 ]), col = 2)
lines(mcmc(mod_list_da[[3]]$samps$res_cuts[4,, 1 ]), col = 3)
lines(mcmc(mod_list_da[[4]]$samps$res_cuts[4,, 1 ]), col = 4)
text(13225, 2.59, labels = "GR Upper CI = 1.102", cex = 1.2)
text(4250, 2.59, labels = "Mean Effective Samples = 42.4", cex = 1.2)
acf(mod_list_da[[1]]$samps$res_cuts[4,, 1],
main = expression("(Chain 1) DA Autocorrelation: " ~ gamma[13]))
text(32, 0.97, labels = "Lag 5 autocorrelation = 0.97", cex = 1.2)
autocorr(mcmc(mod_list_da[[1]]$samps$res_cuts[4,, 1]))
par(mfrow=c(2,2))
par(mar=c(4.1, 4.1, 4.1, 2.1))
plot(mod_list[[1]]$samps$res_cuts[3,, 1], type = "l",
ylab = expression(gamma[12]), main = expression("PX-DA Traceplot: " ~ gamma[12]),
xlab = "Iterations", ylim = c(0.9, 1.67))
lines(mcmc(mod_list[[4]]$samps$res_cuts[3,, 1]), col = 2)
lines(mcmc(mod_list[[3]]$samps$res_cuts[3,, 1]), col = 3)
lines(mcmc(mod_list[[2]]$samps$res_cuts[3,, 1]), col = 4)
text(13225, 1.64, labels = "GR Upper CI = 1.020", cex = 1.2)
text(4250, 1.64, labels = "Mean Effective Samples = 286.6", cex = 1.2)
acf(mod_list[[1]]$samps$res_cuts[3,, 1],
main = expression("(Chain 1) PX-DA Autocorrelation: " ~ gamma[12]))
text(32, 0.97, labels = "Lag 5 autocorrelation = 0.48", cex = 1.2)
autocorr(mcmc(mod_list[[1]]$samps$res_cuts[3,, 1]))
plot(mod_list_da[[1]]$samps$res_cuts[4,, 1], type = "l",
ylab = expression(gamma[13]), main = expression("DA Traceplot: " ~ gamma[13]),
xlab = "Iterations", ylim = c(1.85, 2.65))
lines(mcmc(mod_list_da[[2]]$samps$res_cuts[4,, 1 ]), col = 2)
lines(mcmc(mod_list_da[[3]]$samps$res_cuts[4,, 1 ]), col = 3)
lines(mcmc(mod_list_da[[4]]$samps$res_cuts[4,, 1 ]), col = 4)
text(13225, 2.62, labels = "GR Upper CI = 1.102", cex = 1.2)
text(4250, 2.62, labels = "Mean Effective Samples = 42.4", cex = 1.2)
acf(mod_list_da[[1]]$samps$res_cuts[4,, 1],
main = expression("(Chain 1) DA Autocorrelation: " ~ gamma[13]))
text(32, 0.97, labels = "Lag 5 autocorrelation = 0.97", cex = 1.2)
autocorr(mcmc(mod_list_da[[1]]$samps$res_cuts[4,, 1]))
par(mfrow=c(2,2))
par(mar=c(4.1, 4.1, 4.1, 2.1))
plot(mod_list[[1]]$samps$res_cuts[3,, 1], type = "l",
ylab = expression(gamma[12]), main = expression("PX-DA Traceplot: " ~ gamma[12]),
xlab = "Iterations", ylim = c(0.9, 1.68))
lines(mcmc(mod_list[[4]]$samps$res_cuts[3,, 1]), col = 2)
lines(mcmc(mod_list[[3]]$samps$res_cuts[3,, 1]), col = 3)
lines(mcmc(mod_list[[2]]$samps$res_cuts[3,, 1]), col = 4)
text(13225, 1.65, labels = "GR Upper CI = 1.020", cex = 1.2)
text(4250, 1.65, labels = "Mean Effective Samples = 286.6", cex = 1.2)
acf(mod_list[[1]]$samps$res_cuts[3,, 1],
main = expression("(Chain 1) PX-DA Autocorrelation: " ~ gamma[12]))
text(32, 0.97, labels = "Lag 5 autocorrelation = 0.48", cex = 1.2)
autocorr(mcmc(mod_list[[1]]$samps$res_cuts[3,, 1]))
plot(mod_list_da[[1]]$samps$res_cuts[4,, 1], type = "l",
ylab = expression(gamma[13]), main = expression("DA Traceplot: " ~ gamma[13]),
xlab = "Iterations", ylim = c(1.85, 2.65))
lines(mcmc(mod_list_da[[2]]$samps$res_cuts[4,, 1 ]), col = 2)
lines(mcmc(mod_list_da[[3]]$samps$res_cuts[4,, 1 ]), col = 3)
lines(mcmc(mod_list_da[[4]]$samps$res_cuts[4,, 1 ]), col = 4)
text(13225, 2.62, labels = "GR Upper CI = 1.102", cex = 1.2)
text(4250, 2.62, labels = "Mean Effective Samples = 42.4", cex = 1.2)
acf(mod_list_da[[1]]$samps$res_cuts[4,, 1],
main = expression("(Chain 1) DA Autocorrelation: " ~ gamma[13]))
text(32, 0.97, labels = "Lag 5 autocorrelation = 0.97", cex = 1.2)
par(mfrow=c(2,2))
par(mar=c(4.1, 4.1, 4.1, 2.1))
plot(mod_list[[1]]$samps$res_cuts[3,, 1], type = "l",
ylab = expression(gamma[12]), main = expression("PX-DA Traceplot: " ~ gamma[12]),
xlab = "Iterations", ylim = c(0.9, 1.70))
lines(mcmc(mod_list[[4]]$samps$res_cuts[3,, 1]), col = 2)
lines(mcmc(mod_list[[3]]$samps$res_cuts[3,, 1]), col = 3)
lines(mcmc(mod_list[[2]]$samps$res_cuts[3,, 1]), col = 4)
text(13225, 1.67, labels = "GR Upper CI = 1.020", cex = 1.2)
text(4250, 1.67, labels = "Mean Effective Samples = 286.6", cex = 1.2)
acf(mod_list[[1]]$samps$res_cuts[3,, 1],
main = expression("(Chain 1) PX-DA Autocorrelation: " ~ gamma[12]))
text(32, 0.97, labels = "Lag 5 autocorrelation = 0.48", cex = 1.2)
autocorr(mcmc(mod_list[[1]]$samps$res_cuts[3,, 1]))
plot(mod_list_da[[1]]$samps$res_cuts[4,, 1], type = "l",
ylab = expression(gamma[13]), main = expression("DA Traceplot: " ~ gamma[13]),
xlab = "Iterations", ylim = c(1.85, 2.65))
lines(mcmc(mod_list_da[[2]]$samps$res_cuts[4,, 1 ]), col = 2)
lines(mcmc(mod_list_da[[3]]$samps$res_cuts[4,, 1 ]), col = 3)
lines(mcmc(mod_list_da[[4]]$samps$res_cuts[4,, 1 ]), col = 4)
text(13225, 2.62, labels = "GR Upper CI = 1.102", cex = 1.2)
text(4250, 2.62, labels = "Mean Effective Samples = 42.4", cex = 1.2)
acf(mod_list_da[[1]]$samps$res_cuts[4,, 1],
main = expression("(Chain 1) DA Autocorrelation: " ~ gamma[13]))
text(32, 0.97, labels = "Lag 5 autocorrelation = 0.97", cex = 1.2)
par(mfrow=c(2,2))
plot(mod_list[[1]]$samps$res_cuts[4,, 1], type = "l",
ylab = expression(gamma[13]), main = expression("Traceplot: " ~ gamma[13]),
xlab = "Iterations", ylim = c(1.62, 2.67))
lines(mcmc(mod_list[[2]]$samps$res_cuts[4,, 1 ]), col = 2)
lines(mcmc(mod_list[[3]]$samps$res_cuts[4,, 1 ]), col = 3)
lines(mcmc(mod_list[[4]]$samps$res_cuts[4,, 1 ]), col = 4)
text(13225, 2.64, labels = "GR Upper CI = 1.002", cex = 1.2)
max_dens <- max(c(density(mod_list[[1]]$samps$res_cuts[4, ,1])$y,
density(mod_list[[2]]$samps$res_cuts[4, ,1])$y,
density(mod_list[[3]]$samps$res_cuts[4, ,1])$y))
plot(density(mod_list[[1]]$samps$res_cuts[4,,1 ]), type = "l", lwd = 3,
ylab = expression(gamma[13]), ylim = c(0, max_dens),
main = expression("Posterior Density: " ~ gamma[13]))
lines(density(mcmc(mod_list[[2]]$samps$res_cuts[4, ,1])), col = 2, lwd = 3)
lines(density(mcmc(mod_list[[3]]$samps$res_cuts[4, ,1])), col = 3, lwd = 3)
lines(density(mcmc(mod_list[[4]]$samps$res_cuts[4, ,1])), col = 4, lwd = 3)
legend("topright", legend = c("Chain 1", "Chain 2", "Chain 3", "Chain 4"),
lty = 1, col = 1:4, cex = 1.2, lwd = 3)
plot(mod_list[[1]]$samps$res_cuts[3,, 2], type = "l",
ylab = expression(gamma[22]), main = expression("Traceplot: " ~ gamma[22]),
xlab = "Iterations", ylim = c(0.95, 1.73))
lines(mcmc(mod_list[[2]]$samps$res_cuts[3,, 2 ]), col = 2)
lines(mcmc(mod_list[[3]]$samps$res_cuts[3,, 2 ]), col = 3)
lines(mcmc(mod_list[[4]]$samps$res_cuts[3,, 2 ]), col = 4)
text(13225, 1.70, labels = "GR Upper CI = 1.004", cex = 1.2)
max_dens <- max(c(density(mod_list[[1]]$samps$res_cuts[3, ,2])$y,
density(mod_list[[2]]$samps$res_cuts[3, ,2])$y,
density(mod_list[[3]]$samps$res_cuts[3, ,2])$y))
plot(density(mod_list[[1]]$samps$res_cuts[3,,2 ]), type = "l", lwd = 3,
ylab = expression(gamma[22]), ylim = c(0, max_dens),
main = expression("Posterior Density: " ~ gamma[22]))
lines(density(mcmc(mod_list[[2]]$samps$res_cuts[3, ,2])), col = 2, lwd = 3)
lines(density(mcmc(mod_list[[3]]$samps$res_cuts[3, ,2])), col = 3, lwd = 3)
lines(density(mcmc(mod_list[[4]]$samps$res_cuts[3, ,2])), col = 4, lwd = 3)
legend("topright", legend = c("Chain 1", "Chain 2", "Chain 3", "Chain 4"),
lty = 1, col = 1:4, cex = 1.2, lwd = 3)
par(mar=c(2.1, 4.1, 2.1, 2.1))
library(truncnorm)
set.seed(102)
data <- data.frame(
ordinal_outcome = as.character(rep(1:4, each = 50)),
cont = c(rtruncnorm(50, -Inf, -0.02, -2.4, 1),
rtruncnorm(50, 0.31, 1.7, 1, 1),
rtruncnorm(50, 2.9, 5, 4.9, 1),
rtruncnorm(50, 6.01, Inf, 7, 1)),
y_val = runif(200)
)
ggplot(data, aes(x = cont)) +
geom_histogram(aes(color = ordinal_outcome, fill = ordinal_outcome),
position = "identity", alpha = 0.7, bins = 30) +
labs(color = "Ordinal Outcome", fill = "Ordinal Outcome") +
geom_vline(xintercept = c(0, 1.75, 2.7, 5.15, 6.1), size = 1.2) +
ylab("Frequency") +
xlab("Latent Outcome Values") +
annotate(geom="text", y=15, x=2.2, label= "gamma[2]", parse = T, size = 7) +
annotate(geom="text", y=15, x=5.6, label= "gamma[3]", parse = T, size = 7) +
theme_bw()
ggplot(data, aes(x = cont)) +
geom_histogram(aes(color = ordinal_outcome, fill = ordinal_outcome),
position = "identity", alpha = 0.7, bins = 30) +
labs(color = "Ordinal Outcome", fill = "Ordinal Outcome") +
geom_vline(xintercept = c(0, 1.75, 2.7, 5.15, 6.1), size = 1.2) +
ylab("Frequency") +
xlab("Latent Outcome Values") +
annotate(geom="text", y=15, x=2.2, label= "gamma[2]", parse = T, size = 7) +
annotate(geom="text", y=15, x=5.6, label= "gamma[3]", parse = T, size = 7) +
theme_bw()
ggplot(data, aes(x = cont)) +
geom_histogram(aes(color = ordinal_outcome, fill = ordinal_outcome),
position = "identity", alpha = 0.7, bins = 30) +
labs(color = "Ordinal Outcome", fill = "Ordinal Outcome") +
geom_vline(xintercept = c(0, 1.75, 2.7, 5.15, 6.1), size = 1.2) +
ylab("Frequency") +
xlab("Latent Outcome Values") +
annotate(geom="text", y=15, x=2.2, label= "gamma[2]", parse = T, size = 7) +
annotate(geom="text", y=15, x=5.6, label= "gamma[3]", parse = T, size = 7) +
theme_bw()
gelman.diag(mcmc.list(mcmc(mod_list_da[[1]]$samps$res_cuts[4, , 1]),
mcmc(mod_list_da[[2]]$samps$res_cuts[4, ,1 ]),
mcmc(mod_list_da[[3]]$samps$res_cuts[4, , 1]),
mcmc(mod_list_da[[4]]$samps$res_cuts[4, , 1])))[[1]][, 2]
par(mfrow=c(2,2))
par(mar=c(4.1, 4.1, 4.1, 2.1))
plot(mod_list[[1]]$samps$res_cuts[3,, 1], type = "l",
ylab = expression(gamma[12]), main = expression("PX-DA Traceplot: " ~ gamma[12]),
xlab = "Iterations", ylim = c(0.9, 1.70))
lines(mcmc(mod_list[[4]]$samps$res_cuts[3,, 1]), col = 2)
lines(mcmc(mod_list[[3]]$samps$res_cuts[3,, 1]), col = 3)
lines(mcmc(mod_list[[2]]$samps$res_cuts[3,, 1]), col = 4)
text(13225, 1.67, labels = "GR Upper CI = 1.020", cex = 1.2)
text(4250, 1.67, labels = "Mean Effective Samples = 286.6", cex = 1.2)
acf(mod_list[[1]]$samps$res_cuts[3,, 1],
main = expression("(Chain 1) PX-DA Autocorrelation: " ~ gamma[12]))
text(32, 0.97, labels = "Lag 5 autocorrelation = 0.48", cex = 1.2)
autocorr(mcmc(mod_list[[1]]$samps$res_cuts[3,, 1]))
plot(mod_list_da[[1]]$samps$res_cuts[4,, 1], type = "l",
ylab = expression(gamma[13]), main = expression("DA Traceplot: " ~ gamma[13]),
xlab = "Iterations", ylim = c(1.85, 2.65))
lines(mcmc(mod_list_da[[2]]$samps$res_cuts[4,, 1 ]), col = 2)
lines(mcmc(mod_list_da[[3]]$samps$res_cuts[4,, 1 ]), col = 3)
lines(mcmc(mod_list_da[[4]]$samps$res_cuts[4,, 1 ]), col = 4)
text(13225, 2.62, labels = "GR Upper CI = 1.046", cex = 1.2)
text(4250, 2.62, labels = "Mean Effective Samples = 42.4", cex = 1.2)
acf(mod_list_da[[1]]$samps$res_cuts[4,, 1],
main = expression("(Chain 1) DA Autocorrelation: " ~ gamma[13]))
text(32, 0.97, labels = "Lag 5 autocorrelation = 0.97", cex = 1.2)
autocorr(mcmc(mod_list_da[[1]]$samps$res_cuts[4,, 1]))
par(mfrow=c(2,2))
par(mar=c(4.1, 4.1, 4.1, 2.1))
plot(mod_list[[1]]$samps$res_cuts[3,, 1], type = "l",
ylab = expression(gamma[12]), main = expression("PX-DA Traceplot: " ~ gamma[12]),
xlab = "Iterations", ylim = c(0.9, 1.70))
lines(mcmc(mod_list[[4]]$samps$res_cuts[3,, 1]), col = 2)
lines(mcmc(mod_list[[3]]$samps$res_cuts[3,, 1]), col = 3)
lines(mcmc(mod_list[[2]]$samps$res_cuts[3,, 1]), col = 4)
text(13225, 1.67, labels = "GR Upper CI = 1.020", cex = 1.2)
text(4250, 1.67, labels = "Mean Effective Samples = 286.6", cex = 1.2)
acf(mod_list[[1]]$samps$res_cuts[3,, 1],
main = expression("(Chain 1) PX-DA Autocorrelation: " ~ gamma[12]))
text(32, 0.97, labels = "Lag 5 autocorrelation = 0.48", cex = 1.2)
autocorr(mcmc(mod_list[[1]]$samps$res_cuts[3,, 1]))
plot(mod_list_da[[1]]$samps$res_cuts[4,, 1], type = "l",
ylab = expression(gamma[13]), main = expression("DA Traceplot: " ~ gamma[13]),
xlab = "Iterations", ylim = c(1.85, 2.65))
lines(mcmc(mod_list_da[[2]]$samps$res_cuts[4,, 1 ]), col = 2)
lines(mcmc(mod_list_da[[3]]$samps$res_cuts[4,, 1 ]), col = 3)
lines(mcmc(mod_list_da[[4]]$samps$res_cuts[4,, 1 ]), col = 4)
text(13225, 2.62, labels = "GR Upper CI = 1.046", cex = 1.2)
text(4250, 2.62, labels = "Mean Effective Samples = 42.4", cex = 1.2)
acf(mod_list_da[[1]]$samps$res_cuts[4,, 1],
main = expression("(Chain 1) DA Autocorrelation: " ~ gamma[13]))
text(32, 0.97, labels = "Lag 5 autocorrelation = 0.97", cex = 1.2)
autocorr(mcmc(mod_list_da[[1]]$samps$res_cuts[4,, 1]))
par(mfrow=c(2,2))
par(mar=c(4.1, 4.1, 4.1, 2.1))
plot(mod_list[[1]]$samps$res_cuts[3,, 1], type = "l",
ylab = expression(gamma[12]), main = expression("PX-DA Traceplot: " ~ gamma[12]),
xlab = "Iterations", ylim = c(0.9, 1.70))
lines(mcmc(mod_list[[4]]$samps$res_cuts[3,, 1]), col = 2)
lines(mcmc(mod_list[[3]]$samps$res_cuts[3,, 1]), col = 3)
lines(mcmc(mod_list[[2]]$samps$res_cuts[3,, 1]), col = 4)
text(13225, 1.67, labels = "GR Upper CI = 1.020", cex = 1.2)
text(4250, 1.67, labels = "Mean Effective Samples = 286.6", cex = 1.2)
acf(mod_list[[1]]$samps$res_cuts[3,, 1],
main = expression("(Chain 1) PX-DA Autocorrelation: " ~ gamma[12]))
text(32, 0.97, labels = "Lag 5 autocorrelation = 0.48", cex = 1.2)
autocorr(mcmc(mod_list[[1]]$samps$res_cuts[3,, 1]))
plot(mod_list_da[[1]]$samps$res_cuts[4,, 1], type = "l",
ylab = expression(gamma[13]), main = expression("DA Traceplot: " ~ gamma[13]),
xlab = "Iterations", ylim = c(1.85, 2.65))
lines(mcmc(mod_list_da[[2]]$samps$res_cuts[4,, 1 ]), col = 2)
lines(mcmc(mod_list_da[[3]]$samps$res_cuts[4,, 1 ]), col = 3)
lines(mcmc(mod_list_da[[4]]$samps$res_cuts[4,, 1 ]), col = 4)
text(13225, 2.62, labels = "GR Upper CI = 1.046", cex = 1.2)
text(4250, 2.62, labels = "Mean Effective Samples = 42.4", cex = 1.2)
acf(mod_list_da[[1]]$samps$res_cuts[4,, 1],
main = expression("(Chain 1) DA Autocorrelation: " ~ gamma[13]))
text(32, 0.97, labels = "Lag 5 autocorrelation = 0.97", cex = 1.2)
autocorr(mcmc(mod_list_da[[1]]$samps$res_cuts[4,, 1]))
par(mfrow=c(2,2))
par(mar=c(4.1, 4.1, 4.1, 2.1))
plot(mod_list[[1]]$samps$res_cuts[3,, 1], type = "l",
ylab = expression(gamma[12]), main = expression("PX-DA Traceplot: " ~ gamma[12]),
xlab = "Iterations", ylim = c(0.9, 1.70))
lines(mcmc(mod_list[[4]]$samps$res_cuts[3,, 1]), col = 2)
lines(mcmc(mod_list[[3]]$samps$res_cuts[3,, 1]), col = 3)
lines(mcmc(mod_list[[2]]$samps$res_cuts[3,, 1]), col = 4)
text(13225, 1.67, labels = "GR Upper CI = 1.020", cex = 1.2)
text(4250, 1.67, labels = "Mean Effective Samples = 286.6", cex = 1.2)
acf(mod_list[[1]]$samps$res_cuts[3,, 1],
main = expression("(Chain 1) PX-DA Autocorrelation: " ~ gamma[12]))
text(32, 0.97, labels = "Lag 5 autocorrelation = 0.48", cex = 1.2)
autocorr(mcmc(mod_list[[1]]$samps$res_cuts[3,, 1]))
plot(mod_list_da[[1]]$samps$res_cuts[4,, 1], type = "l",
ylab = expression(gamma[13]), main = expression("DA Traceplot: " ~ gamma[13]),
xlab = "Iterations", ylim = c(1.85, 2.65))
lines(mcmc(mod_list_da[[2]]$samps$res_cuts[4,, 1 ]), col = 2)
lines(mcmc(mod_list_da[[3]]$samps$res_cuts[4,, 1 ]), col = 3)
lines(mcmc(mod_list_da[[4]]$samps$res_cuts[4,, 1 ]), col = 4)
text(13225, 2.62, labels = "GR Upper CI = 1.046", cex = 1.2)
text(4250, 2.62, labels = "Mean Effective Samples = 42.4", cex = 1.2)
acf(mod_list_da[[1]]$samps$res_cuts[4,, 1],
main = expression("(Chain 1) DA Autocorrelation: " ~ gamma[13]))
text(32, 0.97, labels = "Lag 5 autocorrelation = 0.97", cex = 1.2)
autocorr(mcmc(mod_list_da[[1]]$samps$res_cuts[4,, 1]))
par(mfrow=c(2,2))
par(mar=c(4.1, 4.1, 4.1, 2.1))
plot(mod_list[[1]]$samps$res_cuts[3,, 1], type = "l",
ylab = expression(gamma[12]), main = expression("PX-DA Traceplot: " ~ gamma[12]),
xlab = "Iterations", ylim = c(0.9, 1.70))
lines(mcmc(mod_list[[4]]$samps$res_cuts[3,, 1]), col = 2)
lines(mcmc(mod_list[[3]]$samps$res_cuts[3,, 1]), col = 3)
lines(mcmc(mod_list[[2]]$samps$res_cuts[3,, 1]), col = 4)
text(13225, 1.67, labels = "GR Upper CI = 1.020", cex = 1.2)
text(4250, 1.67, labels = "Mean Effective Samples = 286.6", cex = 1.2)
acf(mod_list[[1]]$samps$res_cuts[3,, 1],
main = expression("(Chain 1) PX-DA Autocorrelation: " ~ gamma[12]))
text(32, 0.97, labels = "Lag 5 autocorrelation = 0.48", cex = 1.2)
autocorr(mcmc(mod_list[[1]]$samps$res_cuts[3,, 1]))
plot(mod_list_da[[1]]$samps$res_cuts[4,, 1], type = "l",
ylab = expression(gamma[13]), main = expression("DA Traceplot: " ~ gamma[13]),
xlab = "Iterations", ylim = c(1.85, 2.67))
lines(mcmc(mod_list_da[[2]]$samps$res_cuts[4,, 1 ]), col = 2)
lines(mcmc(mod_list_da[[3]]$samps$res_cuts[4,, 1 ]), col = 3)
lines(mcmc(mod_list_da[[4]]$samps$res_cuts[4,, 1 ]), col = 4)
text(13225, 2.64, labels = "GR Upper CI = 1.046", cex = 1.2)
text(4250, 2.64, labels = "Mean Effective Samples = 42.4", cex = 1.2)
acf(mod_list_da[[1]]$samps$res_cuts[4,, 1],
main = expression("(Chain 1) DA Autocorrelation: " ~ gamma[13]))
text(32, 0.97, labels = "Lag 5 autocorrelation = 0.97", cex = 1.2)
par(mfrow=c(2,2))
plot(mod_list[[1]]$samps$res_cuts[4,, 1], type = "l",
ylab = expression(gamma[13]), main = expression("Traceplot: " ~ gamma[13]),
xlab = "Iterations", ylim = c(1.62, 2.67))
lines(mcmc(mod_list[[2]]$samps$res_cuts[4,, 1 ]), col = 2)
lines(mcmc(mod_list[[3]]$samps$res_cuts[4,, 1 ]), col = 3)
lines(mcmc(mod_list[[4]]$samps$res_cuts[4,, 1 ]), col = 4)
text(13225, 2.64, labels = "GR Upper CI = 1.002", cex = 1.2)
max_dens <- max(c(density(mod_list[[1]]$samps$res_cuts[4, ,1])$y,
density(mod_list[[2]]$samps$res_cuts[4, ,1])$y,
density(mod_list[[3]]$samps$res_cuts[4, ,1])$y))
plot(density(mod_list[[1]]$samps$res_cuts[4,,1 ]), type = "l", lwd = 3,
ylab = expression(gamma[13]), ylim = c(0, max_dens),
main = expression("Posterior Density: " ~ gamma[13]))
lines(density(mcmc(mod_list[[2]]$samps$res_cuts[4, ,1])), col = 2, lwd = 3)
lines(density(mcmc(mod_list[[3]]$samps$res_cuts[4, ,1])), col = 3, lwd = 3)
lines(density(mcmc(mod_list[[4]]$samps$res_cuts[4, ,1])), col = 4, lwd = 3)
legend("topright", legend = c("Chain 1", "Chain 2", "Chain 3", "Chain 4"),
lty = 1, col = 1:4, cex = 1.2, lwd = 3)
plot(mod_list[[1]]$samps$res_cuts[3,, 2], type = "l",
ylab = expression(gamma[22]), main = expression("Traceplot: " ~ gamma[22]),
xlab = "Iterations", ylim = c(0.95, 1.73))
lines(mcmc(mod_list[[2]]$samps$res_cuts[3,, 2 ]), col = 2)
lines(mcmc(mod_list[[3]]$samps$res_cuts[3,, 2 ]), col = 3)
lines(mcmc(mod_list[[4]]$samps$res_cuts[3,, 2 ]), col = 4)
text(13225, 1.70, labels = "GR Upper CI = 1.004", cex = 1.2)
max_dens <- max(c(density(mod_list[[1]]$samps$res_cuts[3, ,2])$y,
density(mod_list[[2]]$samps$res_cuts[3, ,2])$y,
density(mod_list[[3]]$samps$res_cuts[3, ,2])$y))
plot(density(mod_list[[1]]$samps$res_cuts[3,,2 ]), type = "l", lwd = 3,
ylab = expression(gamma[22]), ylim = c(0, max_dens),
main = expression("Posterior Density: " ~ gamma[22]))
lines(density(mcmc(mod_list[[2]]$samps$res_cuts[3, ,2])), col = 2, lwd = 3)
lines(density(mcmc(mod_list[[3]]$samps$res_cuts[3, ,2])), col = 3, lwd = 3)
lines(density(mcmc(mod_list[[4]]$samps$res_cuts[3, ,2])), col = 4, lwd = 3)
legend("topright", legend = c("Chain 1", "Chain 2", "Chain 3", "Chain 4"),
lty = 1, col = 1:4, cex = 1.2, lwd = 3)
mod_list
dim(mod_list)
table(mod_list[[1]]$df_used$y_ord)
table(mod_list[[1]]$df_used$y_ord) / 5
table(mod_list[[1]]$df_used$y_ord2)
table(mod_list[[1]]$df_used$y_ord2) / 5
174 + 165 + 136
113 + 147 + 95 + 120
setwd("C:/Users/Nick/Dropbox/_Thesis/bmrvar/packages/bmrarm")
library(devtools)
test()
document()
test()
document()
test_that("bmrarm works as anticipated", {
sim_data <- gen_single(N = 400, seed = 10, N_param = 3)
# Test bmrvarx with one ordinal outcome ---------------------------------
samps_one <- bmrvarx(formula = cbind(y2, y3, y_ord) ~ x1,
data = sim_data$data, nsim = 400, burn_in = 200,
seed = 1,
ordinal_outcomes = c("y_ord"), thin = 1,
max_iter_rej = 10000000, fast = T)
# Test brm_slope model against stored object ------------------------------
samps_two <- bmrvarx(formula = cbind(y3, y_ord, y_ord2) ~ x1,
data = sim_data$data, nsim = 400, burn_in = 200,
seed = 1,
ordinal_outcomes = c("y_ord", "y_ord2"), thin = 1,
max_iter_rej = 10000000, fast = T)
# Store results for later use or updating ---------------------------------
# saveRDS(sim_data, ".\\Test_objects/bmrvarx_data_object.RDS")
# saveRDS(samps_one, ".\\Test_objects/bmrvarx_one_ord.RDS")
# saveRDS(samps_two, ".\\Test_objects/bmrvarx_two_ord.RDS")
str <- ".\\..\\..\\Test_objects/"
expect_equal_to_reference(sim_data, paste0(str, "bmrvarx_data_object.RDS"))
expect_equal_to_reference(samps_one, paste0(str, "bmrvarx_one_ord.RDS"))
expect_equal_to_reference(samps_two, paste0(str, "bmrvarx_two_ord.RDS"))
})
setwd("C:/Users/Nick/Dropbox/_Thesis/bmrvar/packages/bmrarm/tests")
str <- ".\\..\\..\\Test_objects/"
expect_equal_to_reference(sim_data, paste0(str, "bmrvarx_data_object.RDS"))
sim_data <- gen_single(N = 400, seed = 10, N_param = 3)
samps_one <- bmrvarx(formula = cbind(y2, y3, y_ord) ~ x1,
data = sim_data$data, nsim = 400, burn_in = 200,
seed = 1,
ordinal_outcomes = c("y_ord"), thin = 1,
max_iter_rej = 10000000, fast = T)
samps_two <- bmrvarx(formula = cbind(y3, y_ord, y_ord2) ~ x1,
data = sim_data$data, nsim = 400, burn_in = 200,
seed = 1,
ordinal_outcomes = c("y_ord", "y_ord2"), thin = 1,
max_iter_rej = 10000000, fast = T)
str <- ".\\..\\..\\Test_objects/"
expect_equal_to_reference(sim_data, paste0(str, "bmrvarx_data_object.RDS"))
setwd("C:/Users/Nick/Dropbox/_Thesis/bmrvar/packages/bmrarm/tests/testthat")
str <- ".\\..\\..\\Test_objects/"
expect_equal_to_reference(sim_data, paste0(str, "bmrvarx_data_object.RDS"))
expect_equal_to_reference(samps_one, paste0(str, "bmrvarx_one_ord.RDS"))
expect_equal_to_reference(samps_two, paste0(str, "bmrvarx_two_ord.RDS"))
setwd("C:/Users/Nick/Dropbox/_Thesis/bmrvar/packages/bmrarm")
document()
setwd("C:/Users/Nick/Dropbox/_Thesis/bmrvar/packages/bmrarm/tests/testthat")
test_that("bmrarm works as anticipated", {
sim_data <- gen_single(N = 400, seed = 10, N_param = 3)
# Test bmrvarx with one ordinal outcome ---------------------------------
samps_one <- bmrvarx(formula = cbind(y2, y3, y_ord) ~ x1,
data = sim_data$data, nsim = 400, burn_in = 200,
seed = 1,
ordinal_outcomes = c("y_ord"), thin = 1,
max_iter_rej = 10000000, fast = T)
# Test brm_slope model against stored object ------------------------------
samps_two <- bmrvarx(formula = cbind(y3, y_ord, y_ord2) ~ x1,
data = sim_data$data, nsim = 400, burn_in = 200,
seed = 1,
ordinal_outcomes = c("y_ord", "y_ord2"), thin = 1,
max_iter_rej = 10000000, fast = T)
# Store results for later use or updating ---------------------------------
# saveRDS(sim_data, ".\\Test_objects/bmrvarx_data_object.RDS")
# saveRDS(samps_one, ".\\Test_objects/bmrvarx_one_ord.RDS")
# saveRDS(samps_two, ".\\Test_objects/bmrvarx_two_ord.RDS")
str <- ".\\..\\..\\Test_objects/"
expect_equal_to_reference(sim_data, paste0(str, "bmrvarx_data_object.RDS"))
expect_equal_to_reference(samps_one, paste0(str, "bmrvarx_one_ord.RDS"))
expect_equal_to_reference(samps_two, paste0(str, "bmrvarx_two_ord.RDS"))
})
test_that("bmrarm works as anticipated", {
sim_data <- gen_single(N = 400, seed = 10, N_param = 3)
# Test bmrvarx with one ordinal outcome ---------------------------------
samps_one <- bmrvarx(formula = cbind(y2, y3, y_ord) ~ x1,
data = sim_data$data, nsim = 400, burn_in = 200,
seed = 1,
ordinal_outcomes = c("y_ord"), thin = 1,
max_iter_rej = 10000000)
# Test brm_slope model against stored object ------------------------------
samps_two <- bmrvarx(formula = cbind(y3, y_ord, y_ord2) ~ x1,
data = sim_data$data, nsim = 400, burn_in = 200,
seed = 1,
ordinal_outcomes = c("y_ord", "y_ord2"), thin = 1,
max_iter_rej = 10000000)
# Store results for later use or updating ---------------------------------
# saveRDS(sim_data, ".\\Test_objects/bmrvarx_data_object.RDS")
# saveRDS(samps_one, ".\\Test_objects/bmrvarx_one_ord.RDS")
# saveRDS(samps_two, ".\\Test_objects/bmrvarx_two_ord.RDS")
str <- ".\\..\\..\\Test_objects/"
expect_equal_to_reference(sim_data, paste0(str, "bmrvarx_data_object.RDS"))
expect_equal_to_reference(samps_one, paste0(str, "bmrvarx_one_ord.RDS"))
expect_equal_to_reference(samps_two, paste0(str, "bmrvarx_two_ord.RDS"))
})
test_that("bmrarm works as anticipated", {
sim_data <- gen_single(N = 400, seed = 10, N_param = 3)
# Test bmrvarx with one ordinal outcome ---------------------------------
samps_one <- bmrvarx(formula = cbind(y2, y3, y_ord) ~ x1,
data = sim_data$data, nsim = 400, burn_in = 200,
seed = 1,
ordinal_outcomes = c("y_ord"), thin = 1,
max_iter_rej = 10000000)
# Test brm_slope model against stored object ------------------------------
samps_two <- bmrvarx(formula = cbind(y3, y_ord, y_ord2) ~ x1,
data = sim_data$data, nsim = 400, burn_in = 200,
seed = 1,
ordinal_outcomes = c("y_ord", "y_ord2"), thin = 1,
max_iter_rej = 10000000)
# Store results for later use or updating ---------------------------------
# saveRDS(sim_data, ".\\Test_objects/bmrvarx_data_object.RDS")
# saveRDS(samps_one, ".\\Test_objects/bmrvarx_one_ord.RDS")
# saveRDS(samps_two, ".\\Test_objects/bmrvarx_two_ord.RDS")
str <- ".\\..\\..\\Test_objects/"
expect_equal_to_reference(sim_data, paste0(str, "bmrvarx_data_object.RDS"))
expect_equal_to_reference(samps_one, paste0(str, "bmrvarx_one_ord.RDS"))
expect_equal_to_reference(samps_two, paste0(str, "bmrvarx_two_ord.RDS"))
})
