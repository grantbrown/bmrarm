# Models with AR data
################################################################################
i <- 1
sim_data <- bmrarm:::gen_bmrvarx(N = N_obs, seed = i)
dat <- sim_data$data %>%
#select(y2, y3, y_ord, y_ord2, x1, obs_num, pat_idx) %>%
filter(row_number() > 100)
table(dat$y_ord)
set.seed(i)
N_obs <- 600
sims <- 1000
burn <- 250
################################################################################
# Models with AR data
################################################################################
i <- 1
sim_data <- bmrarm:::gen_bmrvarx(N = N_obs, seed = i)
dat <- sim_data$data %>%
#select(y2, y3, y_ord, y_ord2, x1, obs_num, pat_idx) %>%
filter(row_number() > 100)
table(dat$y_ord)
set.seed(i)
start_time <- Sys.time()
samps <- bmrvarx(formula = cbind(y_ord, y2, y3) ~ x1,
data = dat, nsim = sims, burn_in = burn, seed = 5,
ordinal_outcomes = c("y_ord"), thin = 1)
plot(samps$draws$res_cuts[3, ], type = "l")
plot(samps$draws$res_cuts[4, ], type = "l")
plot(samps$draws$res_y[1, 1,], type = "l")
hist(rnorm(1000))
800 / 10
hist(rnorm(1000, sd = sqrt(4)))
setwd("C:\\Users\\Nick\\Dropbox\\_Thesis\\bmrvar\\long_sims")
source("../run_apps_sims//helper_functions.R")
# Proposed Model results --------------------------------------------------
for(i in 1:125){
mod1 <- readRDS(paste0("Z:\\bmrarm\\bmrvarx_samples\\bmrvarx_sim", i, ".RDS"))
mod <- list()
mod$samps <- mod1$samps$draws
mod$data <- mod1$data
if(i == 1) {
all_res <- all_res_varx(list(mod))
} else {
all_res <- rbind(all_res, all_res_varx(list(mod)))
}
print(i)
res_eta <- sum_res(all_res)
print(mean(res_eta$cover))
}
res_eta <- sum_res(all_res)
mean(res_eta$cover)
View(res_eta)
mod1$df_used[1, ]
mod1$data$data$y1[1]
plot(mod1$samps$draws$res_y[1, 1, ])
plot(mod1$samps$draws$res_y[1, 1, ], type = "l")
mod1$data$data$y1[100]
mod1$data$data$y1[101]
View(res_eta)
# Proposed Model results --------------------------------------------------
for(i in 1:125){
mod1 <- readRDS(paste0("Z:\\bmrarm\\bmrvarx_samples\\bmrvarx_sim", i, ".RDS"))
mod <- list()
mod$samps <- mod1$samps$draws
mod$data <- mod1$data
if(i == 1) {
all_res <- all_res_varx(list(mod))
} else {
all_res <- rbind(all_res, all_res_varx(list(mod)))
}
print(i)
res_eta <- sum_res(all_res)
print(mean(res_eta$cover))
}
res_eta <- sum_res(all_res)
mean(res_eta$cover)
View(res_eta)
N_obs <- 600
sims <- 3000
burn <- 1000
################################################################################
# Models with AR data
################################################################################
sim_data <- bmrarm:::gen_bmrvarx(N = N_obs, seed = i)
dat <- sim_data$data %>%
select(y2, y3, y_ord, y_ord2, x1, obs_num, pat_idx) %>%
filter(row_number() > 100)
set.seed(i)
#dat$y_ord[sample(1:500, 25)] <- NA
#dat$y_ord2[sample(1:500, 25)] <- NA
#dat$y3[sample(1:500, 25)] <- NA
start_time <- Sys.time()
samps <- bmrvarx(formula = cbind(y_ord, y2, y3) ~ x1,
data = dat, nsim = sims, burn_in = burn, seed = i,
ordinal_outcomes = c("y_ord"), thin = 5)
plot(samps$draws$res_cuts[4, ])
plot(samps$draws$res_cuts[3, ])
plot(samps$draws$res_beta[1, ])
setwd("C:\\Users\\Nick\\Dropbox\\_Thesis\\bmrvar\\long_sims")
source("../run_apps_sims//helper_functions.R")
# Proposed Model results --------------------------------------------------
for(i in 1:75){
mod1 <- readRDS(paste0("Z:\\bmrarm\\bmrvarx_samples\\bmrvarx_sim", i, ".RDS"))
mod <- list()
mod$samps <- mod1$samps$draws
mod$data <- mod1$data
if(i == 1) {
all_res <- all_res_varx(list(mod))
} else {
all_res <- rbind(all_res, all_res_varx(list(mod)))
}
print(i)
res_eta <- sum_res(all_res)
print(mean(res_eta$cover))
}
View(res_eta)
# Proposed Model results --------------------------------------------------
for(i in 1:75){
mod1 <- readRDS(paste0("Z:\\bmrarm\\bmrvarx_samples\\bmrvarx_sim", i, ".RDS"))
mod <- list()
mod$samps <- mod1$samps$draws
mod$data <- mod1$data
if(i == 1) {
all_res <- all_res_varx(list(mod))
} else {
all_res <- rbind(all_res, all_res_varx(list(mod)))
}
print(i)
res_eta <- sum_res(all_res)
print(mean(res_eta$cover))
print(nrow(mod$data$data))
}
# Proposed Model results --------------------------------------------------
for(i in 1:75){
mod1 <- readRDS(paste0("Z:\\bmrarm\\bmrvarx_samples\\bmrvarx_sim", i, ".RDS"))
mod <- list()
mod$samps <- mod1$samps$draws
mod$data <- mod1$data
if(i == 1) {
all_res <- all_res_varx(list(mod))
} else {
all_res <- rbind(all_res, all_res_varx(list(mod)))
}
print(i)
res_eta <- sum_res(all_res)
print(mean(res_eta$cover))
print(nrow(mod$data$data))
}
View(res_eta)
# Proposed Model results --------------------------------------------------
for(i in 1:75){
mod1 <- readRDS(paste0("Z:\\bmrarm\\bmrvarx_samples\\bmrvarx_sim", i, ".RDS"))
mod <- list()
mod$samps <- mod1$samps$draws
mod$data <- mod1$data
if(i == 1) {
all_res <- all_res_varx(list(mod))
} else {
all_res <- rbind(all_res, all_res_varx(list(mod)))
}
print(i)
res_eta <- sum_res(all_res)
print(mean(res_eta$cover))
print(nrow(mod$data$data))
}
View(res_eta)
View(all_res)
EuStockMarkets
EuStockMarkets
stnry
# Proposed Model results --------------------------------------------------
for(i in 60:75){
mod1 <- readRDS(paste0("Z:\\bmrarm\\bmrvarx_samples\\bmrvarx_sim", i, ".RDS"))
mod <- list()
mod$samps <- mod1$samps$draws
mod$data <- mod1$data
if(i == 60) {
all_res <- all_res_varx(list(mod))
} else {
all_res <- rbind(all_res, all_res_varx(list(mod)))
}
print(i)
res_eta <- sum_res(all_res)
print(mean(res_eta$cover))
print(nrow(mod$data$data))
}
res_eta <- sum_res(all_res)
mean(res_eta$cover)
View(res_eta)
# Proposed Model results --------------------------------------------------
for(i in 1:75){
mod1 <- readRDS(paste0("Z:\\bmrarm\\bmrvarx_samples\\bmrvarx_sim", i, ".RDS"))
mod <- list()
mod$samps <- mod1$samps$draws
mod$data <- mod1$data
if(i == 1) {
all_res <- all_res_varx(list(mod))
} else {
all_res <- rbind(all_res, all_res_varx(list(mod)))
}
print(i)
res_eta <- sum_res(all_res)
print(mean(res_eta$cover))
print(nrow(mod$data$data))
}
View(res_eta)
# Proposed Model results --------------------------------------------------
for(i in 113:125){
mod1 <- readRDS(paste0("Z:\\bmrarm\\bmrvarx_samples\\bmrvarx_sim_small", i, ".RDS"))
mod <- list()
mod$samps <- mod1$samps$draws
mod$data <- mod1$data
if(i == 113) {
all_res <- all_res_varx(list(mod))
} else {
all_res <- rbind(all_res, all_res_varx(list(mod)))
}
print(i)
res_eta <- sum_res(all_res)
print(mean(res_eta$cover))
print(nrow(mod$data$data))
}
res_eta <- sum_res(all_res)
mean(res_eta$cover)
View(res_eta)
# Proposed Model results --------------------------------------------------
for(i in 1:125){
mod1 <- readRDS(paste0("Z:\\bmrarm\\bmrvarx_samples\\bmrvarx_sim_small", i, ".RDS"))
mod <- list()
mod$samps <- mod1$samps$draws
mod$data <- mod1$data
if(i == 1) {
all_res <- all_res_varx(list(mod))
} else {
all_res <- rbind(all_res, all_res_varx(list(mod)))
}
print(i)
res_eta <- sum_res(all_res)
print(mean(res_eta$cover))
print(nrow(mod$data$data))
}
View(res_eta)
3000 / 5
8000 / 4
# Proposed Model results --------------------------------------------------
for(i in 113:125){
mod1 <- readRDS(paste0("Z:\\bmrarm\\bmrvarx_samples\\bmrvarx_sim_small", i, ".RDS"))
mod <- list()
mod$samps <- mod1$samps$draws
mod$data <- mod1$data
if(i == 113) {
all_res <- all_res_varx(list(mod))
} else {
all_res <- rbind(all_res, all_res_varx(list(mod)))
}
print(i)
res_eta <- sum_res(all_res)
print(mean(res_eta$cover))
print(nrow(mod$data$data))
}
i <- 120
mod1 <- readRDS(paste0("Z:\\bmrarm\\bmrvarx_samples\\bmrvarx_sim_small", i, ".RDS"))
table(mod1$df_used$y_ord)
View(res_eta)
7000 / 4
# Proposed Model results --------------------------------------------------
for(i in 113:125){
mod1 <- readRDS(paste0("Z:\\bmrarm\\bmrvarx_samples\\bmrvarx_sim_small", i, ".RDS"))
mod <- list()
mod$samps <- mod1$samps$draws
mod$data <- mod1$data
if(i == 113) {
all_res <- all_res_varx(list(mod))
} else {
all_res <- rbind(all_res, all_res_varx(list(mod)))
}
print(i)
res_eta <- sum_res(all_res)
print(mean(res_eta$cover))
print(nrow(mod$data$data))
}
View(res_eta)
setwd("C:\\Users\\Nick\\Dropbox\\_Thesis\\bmrvar\\long_sims")
source("../run_apps_sims//helper_functions.R")
# Proposed Model results --------------------------------------------------
for(i in 1:125){
mod1 <- readRDS(paste0("Z:\\bmrarm\\bmrvarx_samples\\bmrvarx_sim_small", i, ".RDS"))
mod <- list()
mod$samps <- mod1$samps$draws
mod$data <- mod1$data
if(i == 113) {
all_res <- all_res_varx(list(mod))
} else {
all_res <- rbind(all_res, all_res_varx(list(mod)))
}
print(i)
res_eta <- sum_res(all_res)
print(mean(res_eta$cover))
print(nrow(mod$data$data))
}
setwd("C:\\Users\\Nick\\Dropbox\\_Thesis\\bmrvar\\long_sims")
source("../run_apps_sims//helper_functions.R")
# Proposed Model results --------------------------------------------------
for(i in 1:125){
mod1 <- readRDS(paste0("Z:\\bmrarm\\bmrvarx_samples\\bmrvarx_sim_small", i, ".RDS"))
mod <- list()
mod$samps <- mod1$samps$draws
mod$data <- mod1$data
if(i == 113) {
all_res <- all_res_varx(list(mod))
} else {
all_res <- rbind(all_res, all_res_varx(list(mod)))
}
print(i)
res_eta <- sum_res(all_res)
print(mean(res_eta$cover))
print(nrow(mod$data$data))
}
# Proposed Model results --------------------------------------------------
for(i in 1:125){
mod1 <- readRDS(paste0("Z:\\bmrarm\\bmrvarx_samples\\bmrvarx_sim_small", i, ".RDS"))
mod <- list()
mod$samps <- mod1$samps$draws
mod$data <- mod1$data
if(i == 1) {
all_res <- all_res_varx(list(mod))
} else {
all_res <- rbind(all_res, all_res_varx(list(mod)))
}
print(i)
res_eta <- sum_res(all_res)
print(mean(res_eta$cover))
print(nrow(mod$data$data))
}
# Proposed Model results --------------------------------------------------
for(i in 94:125){
mod1 <- readRDS(paste0("Z:\\bmrarm\\bmrvarx_samples\\bmrvarx_sim_small", i, ".RDS"))
mod <- list()
mod$samps <- mod1$samps$draws
mod$data <- mod1$data
if(i == 1) {
all_res <- all_res_varx(list(mod))
} else {
all_res <- rbind(all_res, all_res_varx(list(mod)))
}
print(i)
res_eta <- sum_res(all_res)
print(mean(res_eta$cover))
print(nrow(mod$data$data))
}
View(res_eta)
install.packages("C:\\Users\\Nick\\Dropbox\\_Thesis\\bmrvar\\packages\\BMRVARX _new/", repos = NULL, type="source")
library(BMRVARX)
library(dplyr)
setwd("C:\\Users\\nicho\\Dropbox\\_Thesis\\bmrvar\\run_apps_sims")
setwd("C:\\Users\\Nick\\Dropbox\\_Thesis\\bmrvar\\run_apps_sims")
# PX-DA Simulations -------------------------------------------------------
burn <- 400
sims <- 1000
N_obs <- 600
for(i in 1:500){
start_time <- Sys.time()
sim_data <- BMRVARX:::gen_single(N = N_obs, seed = 1 + i)
dat <- sim_data$data %>%
select(y2, y3, y_ord, y_ord2, x1, obs_num, pat_idx) %>%
filter(row_number() > 100)
samps <- bmrvarx(formula = cbind(y2, y3, y_ord) ~ x1,
data = dat, nsim = sims, burn_in = burn, seed = 310,
ordinal_outcomes = c("y_ord"), thin = 2)
end_time <- Sys.time()
fname <- paste0("./../store_apps_sims/Check_New_N500_diff_", i, ".RDS")
saveRDS(list(samps = samps$draws, data = sim_data,
runtime = end_time - start_time), fname)
}
install.packages("C:\\Users\\Nick\\Dropbox\\_Thesis\\bmrvar\\packages\\BMRVARX _new/", repos = NULL, type="source")
library(BMRVARX)
library(dplyr)
setwd("C:\\Users\\Nick\\Dropbox\\_Thesis\\bmrvar\\run_apps_sims")
# PX-DA Simulations -------------------------------------------------------
burn <- 400
sims <- 1000
N_obs <- 600
for(i in 1:500){
start_time <- Sys.time()
sim_data <- BMRVARX:::gen_single(N = N_obs, seed = 1 + i)
dat <- sim_data$data %>%
select(y2, y3, y_ord, y_ord2, x1, obs_num, pat_idx) %>%
filter(row_number() > 100)
samps <- bmrvarx(formula = cbind(y2, y3, y_ord) ~ x1,
data = dat, nsim = sims, burn_in = burn, seed = 310,
ordinal_outcomes = c("y_ord"), thin = 2)
end_time <- Sys.time()
fname <- paste0("./../store_apps_sims/Check_New_N500_diff_", i, ".RDS")
saveRDS(list(samps = samps$draws, data = sim_data,
runtime = end_time - start_time), fname)
}
install.packages("C:\\Users\\Nick\\Dropbox\\_Thesis\\bmrvar\\packages\\BMRVARX_4_23/", repos = NULL, type="source")
install.packages("C:\\Users\\Nick\\Dropbox\\_Thesis\\bmrvar\\packages\\BMRVARX _4_23/", repos = NULL, type="source")
install.packages("C:\\Users\\Nick\\Dropbox\\_Thesis\\bmrvar\\packages\\BMRVARX _4_23/", repos = NULL, type="source")
library(BMRVARX)
library(dplyr)
setwd("C:\\Users\\Nick\\Dropbox\\_Thesis\\bmrvar\\run_apps_sims")
install.packages("C:\\Users\\Nick\\Dropbox\\_Thesis\\bmrvar\\packages\\BMRVARX _new/", repos = NULL, type="source")
library(BMRVARX)
library(dplyr)
setwd("C:\\Users\\Nick\\Dropbox\\_Thesis\\bmrvar\\run_apps_sims")
# PX-DA Simulations -------------------------------------------------------
burn <- 400
sims <- 1000
N_obs <- 600
for(i in 1:500){
start_time <- Sys.time()
sim_data <- BMRVARX:::gen_single(N = N_obs, seed = 1 + i)
dat <- sim_data$data %>%
select(y2, y3, y_ord, y_ord2, x1, obs_num, pat_idx) %>%
filter(row_number() > 100)
samps <- BMRVARX(formula = cbind(y2, y3, y_ord) ~ x1,
data = dat, nsim = sims, burn_in = burn, seed = 310,
ordinal_outcomes = c("y_ord"), thin = 4)
end_time <- Sys.time()
fname <- paste0("./../store_apps_sims/Check_New_N500_diff_", i, ".RDS")
saveRDS(list(samps = samps$draws, data = sim_data,
runtime = end_time - start_time), fname)
}
samps <- BMRVARX::bmrvarx(formula = cbind(y2, y3, y_ord) ~ x1,
data = dat, nsim = sims, burn_in = burn, seed = 310,
ordinal_outcomes = c("y_ord"), thin = 4)
install.packages("C:\\Users\\Nick\\Dropbox\\_Thesis\\bmrvar\\packages\\BMRVARX _4_23/", repos = NULL, type="source")
# PX-DA Simulations -------------------------------------------------------
burn <- 400
sims <- 1000
N_obs <- 600
for(i in 1:500){
start_time <- Sys.time()
sim_data <- BMRVARX:::gen_single(N = N_obs, seed = 1 + i)
dat <- sim_data$data %>%
select(y2, y3, y_ord, y_ord2, x1, obs_num, pat_idx) %>%
filter(row_number() > 100)
samps <- BMRVARX::bmrvarx(formula = cbind(y2, y3, y_ord) ~ x1,
data = dat, nsim = sims, burn_in = burn, seed = 310,
ordinal_outcomes = c("y_ord"), thin = 4)
end_time <- Sys.time()
fname <- paste0("./../store_apps_sims/Check_New_N500_diff_", i, ".RDS")
saveRDS(list(samps = samps$draws, data = sim_data,
runtime = end_time - start_time), fname)
}
install.packages("C:\\Users\\Nick\\Dropbox\\_Thesis\\bmrvar\\packages\\BMRVARX/", repos = NULL, type="source")
library(BMRVARX)
library(dplyr)
setwd("C:\\Users\\Nick\\Dropbox\\_Thesis\\bmrvar\\run_apps_sims")
# PX-DA Simulations -------------------------------------------------------
burn <- 400
sims <- 1000
N_obs <- 600
for(i in 1:500){
start_time <- Sys.time()
sim_data <- BMRVARX:::gen_single(N = N_obs, seed = 1 + i)
dat <- sim_data$data %>%
select(y2, y3, y_ord, y_ord2, x1, obs_num, pat_idx) %>%
filter(row_number() > 100)
samps <- BMRVARX::bmrvarx(formula = cbind(y2, y3, y_ord) ~ x1,
data = dat, nsim = sims, burn_in = burn, seed = 310,
ordinal_outcomes = c("y_ord"), thin = 4)
end_time <- Sys.time()
fname <- paste0("./../store_apps_sims/Check_New_N500_diff_", i, ".RDS")
saveRDS(list(samps = samps$draws, data = sim_data,
runtime = end_time - start_time), fname)
}
# PX-DA Simulations -------------------------------------------------------
burn <- 400
sims <- 1000
N_obs <- 600
for(i in 1:500){
start_time <- Sys.time()
sim_data <- BMRVARX:::gen_single(N = N_obs, seed = 1 + i)
dat <- sim_data$data %>%
select(y2, y3, y_ord, y_ord2, x1, obs_num, pat_idx) %>%
filter(row_number() > 100)
samps <- BMRVARX::bmrvarx(formula = cbind(y2, y3, y_ord) ~ x1,
data = dat, nsim = sims, burn_in = burn, seed = 310,
ordinal_outcomes = c("y_ord"))
end_time <- Sys.time()
fname <- paste0("./../store_apps_sims/Check_New_N500_diff_", i, ".RDS")
saveRDS(list(samps = samps$draws, data = sim_data,
runtime = end_time - start_time), fname)
}
# PX-DA Simulations -------------------------------------------------------
burn <- 2000
sims <- 10000
N_obs <- 600
for(i in 1:500){
start_time <- Sys.time()
sim_data <- BMRVARX:::gen_single(N = N_obs, seed = 1 + i)
dat <- sim_data$data %>%
select(y2, y3, y_ord, y_ord2, x1, obs_num, pat_idx) %>%
filter(row_number() > 100)
samps <- BMRVARX::bmrvarx(formula = cbind(y2, y3, y_ord) ~ x1,
data = dat, nsim = sims, burn_in = burn, seed = 310,
ordinal_outcomes = c("y_ord"))
end_time <- Sys.time()
fname <- paste0("./../store_apps_sims/Check_New_N500_diff_", i, ".RDS")
saveRDS(list(samps = samps$draws, data = sim_data,
runtime = end_time - start_time), fname)
}
mod <- readRDS("./../store_apps_sims/Check_New_N500_diff_1.RDS")
mod1 <- readRDS("./../store_apps_sims/New_N500_diff_1.RDS")
all.equal(mod, mod1)
set.seed(1)
rnorm()
rnorm(1)
rnorm(1)
rnorm(1)
