} else {
res <- rbind(res, readRDS(paste0("Z:\\final_bmrarm\\bmrarm_samples\\simulation_forecast_res", i, ".RDS"))$res)
}
print(i)
}
res %>%
group_by(model, time) %>%
summarise(mean(rmse), mean(in_ci), mean(rps))
for(i in 1:400]){
if(i == 1) {
res <- readRDS(paste0("Z:\\final_bmrarm\\bmrarm_samples\\simulation_forecast_res", i, ".RDS"))$res
} else {
res <- rbind(res, readRDS(paste0("Z:\\final_bmrarm\\bmrarm_samples\\simulation_forecast_res", i, ".RDS"))$res)
}
print(i)
}
for(i in 1:400){
if(i == 1) {
res <- readRDS(paste0("Z:\\final_bmrarm\\bmrarm_samples\\simulation_forecast_res", i, ".RDS"))$res
} else {
res <- rbind(res, readRDS(paste0("Z:\\final_bmrarm\\bmrarm_samples\\simulation_forecast_res", i, ".RDS"))$res)
}
print(i)
}
res %>%
group_by(model, time) %>%
summarise(mean(rmse), mean(in_ci), mean(rps))
check <- res %>%
group_by(model, time) %>%
summarise(mean(rmse), mean(in_ci), mean(rps))
check <- res %>%
group_by(model, time) %>%
summarise(rmse = mean(rmse), in_ci = mean(in_ci), rps = mean(rps))
ggplot(check, aes(x = time, y = rmse, group = model)) +
geom_line()
ggplot(check, aes(x = time, y = rmse, group = model)) +
geom_point()
ggplot(check, aes(x = time, y = rmse, group = model, col = model)) +
geom_point()
ggplot(check, aes(x = time, y = in_ci, group = model, col = model)) +
geom_point()
ggplot(check, aes(x = time, y = rps, group = model, col = model)) +
geom_point()
ggplot(check, aes(x = time, y = rps, group = model, col = model)) +
geom_point() +
ylim(0, 0.15)
ggplot(check, aes(x = time, y = rmse, group = model, col = model)) +
geom_point()
ggplot(check, aes(x = time, y = rmse, group = model, col = model)) +
geom_point() +
ylim(0, 1.5)
ggplot(check, aes(x = time, y = in_ci, group = model, col = model)) +
geom_point()
ggplot(check, aes(x = time, y = in_ci, group = model, col = model)) +
geom_point() +
ylim(0, 1)
ggplot(check, aes(x = time, y = in_ci, group = model, col = model)) +
geom_point() +
ylim(0, 1) +
geom_hline(yintercept = 0.95)
ggplot(check, aes(x = time, y = rmse, group = model, col = model)) +
geom_point() +
ylim(0, 1.5)
ggplot(check, aes(x = time, y = in_ci, group = model, col = model)) +
geom_point() +
ylim(0, 1) +
geom_hline(yintercept = 0.95)
ggplot(check, aes(x = time, y = rps, group = model, col = model)) +
geom_point() +
ylim(0, 0.15)
check
res %>%
group_by(model, time) %>%
summarise(rmse = mean(rmse), in_ci = mean(in_ci), rps = mean(rps)) %>% t()
res %>%
group_by(model, time) %>%
summarise(rmse = mean(rmse), in_ci = mean(in_ci), rps = mean(rps))
## Write into table
full_res <- data.frame(Outcome = c(rep("Continuous", 8), rep("Ordinal", 4)),
Metric = rep(c("RMSE", "Coverage", "RPS"), each = 4))
## Write into table
full_res <- data.frame(Outcome = c(rep("Continuous", 8), rep("Ordinal", 4)),
Metric = rep(c("RMSE", "Coverage", "RPS"), each = 4),
Int = tmp_res[5:8, 3:5],
Slope = tmp_res[9:12, 3:5],
AR = tmp_res[1:4, 3:5])
## Summarise results by group
tmp_res <- res %>%
group_by(model, time) %>%
summarise(rmse = mean(rmse), in_ci = mean(in_ci), rps = mean(rps))
## Write into table
full_res <- data.frame(Outcome = c(rep("Continuous", 8), rep("Ordinal", 4)),
Metric = rep(c("RMSE", "Coverage", "RPS"), each = 4),
Int = tmp_res[5:8, 3:5],
Slope = tmp_res[9:12, 3:5],
AR = tmp_res[1:4, 3:5])
full_res
tmp_res[9:12, 3:5]
as.numeric(tmp_res[9:12, 3:5])
as.vector(tmp_res[9:12, 3:5])
tmp_res[9:12, 3:5]
Slope = as.matrix(tmp_res[9:12, 3:5])
as.matrix(tmp_res[9:12, 3:5])
data.frame(Outcome = c(rep("Continuous", 8), rep("Ordinal", 4)),
Metric = rep(c("RMSE", "Coverage", "RPS"), each = 4),
Int = as.matrix(tmp_res[9:12, 3:5]),
Slope = as.matrix(tmp_res[9:12, 3:5]),
AR = as.matrix(tmp_res[9:12, 3:5]))
as.numeric(as.matrix(tmp_res[9:12, 3:5]))
data.frame(Outcome = c(rep("Continuous", 8), rep("Ordinal", 4)),
Metric = rep(c("RMSE", "Coverage", "RPS"), each = 4),
Int = as.numeric(as.matrix(tmp_res[5:8, 3:5])),
Slope = as.matrix(tmp_res[9:12, 3:5]),
AR = as.matrix(tmp_res[1:4, 3:5]))
rep(c("RMSE", "Coverage", "RPS"), each = 4)
c(rep("Continuous", 8), rep("Ordinal", 4))
as.numeric(as.matrix(tmp_res[5:8, 3:5]))
data.frame(Outcome = c(rep("Continuous", 8), rep("Ordinal", 4)),
Metric = rep(c("RMSE", "Coverage", "RPS"), each = 4),
Int = as.numeric(as.matrix(tmp_res[5:8, 3:5])))
data.frame(Outcome = c(rep("Continuous", 8), rep("Ordinal", 4)),
Metric = rep(c("RMSE", "Coverage", "RPS"), each = 4),
Int = as.numeric(as.matrix(tmp_res[5:8, 3:5])),
Slope = as.matrix(tmp_res[9:12, 3:5]))
tmp_res[9:12, 3:5]
## Write into table
full_res <- data.frame(Outcome = c(rep("Continuous", 8), rep("Ordinal", 4)),
Metric = rep(c("RMSE", "Coverage", "RPS"), each = 4),
Int = as.numeric(as.matrix(tmp_res[5:8, 3:5])),
Slope = as.numeric(as.matrix(tmp_res[9:12, 3:5])),
AR = as.numeric(as.matrix(tmp_res[1:4, 3:5])))
full_res
print(xtable(full_res, type = "latex", digits = c(1, 1, 1, 3, 3, 3)),
include.rownames = F, include.colnames = F, sanitize.text.function = identity)
)
print(xtable(full_res, type = "latex", digits = c(1, 1, 1, 3, 3, 3)),
include.rownames = F, include.colnames = F, sanitize.text.function = identity)
quit()
library(verification)
rps(obs = c(1, 0, 0), c(0.2, 0.1, 0.7))
rps(obs = c(1, 0, 0), matrix(c(0.2, 0.1, 0.7), nrow = 1))
rps(obs = c(1), matrix(c(0.2, 0.1, 0.7), nrow = 1))
rps(obs = c(1), matrix(c(0.2, 0.7, 0.1), nrow = 1))
10 * 6.111
10 * 6111
9 * 5737
61110 - 6000
51633 - 12000
55110 - 39633
55110 - 39633 - 6111
setwd("C:\\Users\\Nick\\Dropbox\\_Thesis\\Time Series Paper")
res <- array(NA, c(10, 4, 500))
setwd("C:\\Users\\Nick\\Dropbox\\_Thesis\\Time Series Paper")
res <- array(NA, c(10, 4, 500))
setwd("C:\\Users\\Nick\\Dropbox\\_Thesis\\Time Series Paper")
res <- array(NA, c(10, 4, 500))
for(i in 1:500) {
f <- paste0("./Fitted Objects\\all_preds", i , ".RDS")
preds <- readRDS(f)
res[,1, i] <- preds$preds_varx[, 6]
res[,2, i] <- preds$preds_bvar[, 6]
res[,3, i] <- preds$preds_bvar_discrete[, 6]
res[,4, i] <- preds$preds_freq[, 6]
print(i)
}
all_res <- apply(res, c(1, 2), function(x) sqrt(mean(x, na.rm = T)))
setwd("C:\\Users\\Nick\\Dropbox\\_Thesis\\Time Series Paper")
res <- array(NA, c(10, 4, 500))
for(i in 1:500) {
f <- paste0("./Fitted Objects\\all_preds", i , ".RDS")
preds <- readRDS(f)
res[,1, i] <- preds$preds_varx[, 6]
res[,2, i] <- preds$preds_bvar[, 6]
res[,3, i] <- preds$preds_bvar_discrete[, 6]
res[,4, i] <- preds$preds_freq[, 6]
print(i)
}
setwd("C:\\Users\\Nick\\Dropbox\\_Thesis\\Time Series Paper")
res <- array(NA, c(10, 4, 500))
for(i in 1:500) {
f <- paste0("./Fitted Objects\\all_preds", i , ".RDS")
preds <- readRDS(f)
res[,1, i] <- preds$preds_varx[, 6]
res[,2, i] <- preds$preds_bvar[, 6]
res[,3, i] <- preds$preds_bvar_discrete[, 6]
res[,4, i] <- preds$preds_freq[, 6]
}
all_res <- apply(res, c(1, 2), function(x) sqrt(mean(x, na.rm = T)))
full <- data.frame(RMSE = c(all_res[, 1],
all_res[, 2],
all_res[, 3],
all_res[, 4]),
Model = rep(c("bmrvarx",
"bvar_cont",
"bvar_cat",
"AR1"), each = 10),
Steps = rep(1:10, 4))
full$Model <- factor(full$Model, levels = c("bmrvarx", "bvar_cont",
"bvar_cat", "AR1"))
data(iris)
tab <- data.frame(Steps = 1:10, all_res)
colnames(tab) <- c("Steps Ahead",
"RMSE: bmrvarx",
expression("RMSE: bvar_cont"[12]),
"RMSE: bvar_cat",
"RMSE: bvar_cat")
myTable = tableGrob(tab)
ggplot(full, aes(x = Steps, y = RMSE, col = Model)) +
geom_line(size = 1.5) +
geom_point(size = 4) +
scale_fill_continuous(name = "Model",
labels = c("A", "B", "C", "D"))
library(ggplot2)
ggplot(full, aes(x = Steps, y = RMSE, col = Model)) +
geom_line(size = 1.5) +
geom_point(size = 4) +
scale_fill_continuous(name = "Model",
labels = c("A", "B", "C", "D"))
print(xtable::xtable(tab, type = "latex", digits = c(1, 1, 4, 4, 3, 3)),
include.rownames = F, include.colnames = F, hline.after = c(10))
tab <- data.frame(Steps = 1:10, all_res)
print(xtable::xtable(tab, type = "latex", digits = c(1, 1, 4, 4, 3, 3)),
include.rownames = F, include.colnames = F, hline.after = c(10))
library(xtable)
print(xtable(data.frame(Steps = 1:10, all_res), type = "latex",
digits = c(1, 1, 4, 4, 3, 3)),
include.rownames = F, include.colnames = F, hline.after = c(10))
tab
print(xtable(data.frame(Steps = 1:10, all_res), type = "latex",
digits = c(1, 1, 4, 4, 3, 3)),
include.rownames = F, include.colnames = F, hline.after = c(10))
full <- data.frame(RMSE = c(all_res[, 1],
all_res[, 2],
all_res[, 3],
all_res[, 4]),
Model = rep(c("bmrvarx",
"bvar_cont",
"bvar_cat",
"AR1"), each = 10),
Steps = rep(1:10, 4))
full$Model <- factor(full$Model, levels = c("bmrvarx", "bvar_cont",
"bvar_cat", "AR1"))
data(iris)
tab <- data.frame(Steps = 1:10, all_res)
colnames(tab) <- c("Steps Ahead",
"RMSE: bmrvarx",
expression("RMSE: bvar_cont"[12]),
"RMSE: bvar_cat",
"RMSE: bvar_cat")
myTable = tableGrob(tab)
ggplot(full, aes(x = Steps, y = RMSE, col = Model)) +
geom_line(size = 1.5) +
geom_point(size = 4) +
scale_fill_continuous(name = "Model",
labels = c("A", "B", "C", "D"))
grid.arrange(myTable, myPlot, nrow = 1)
library(gridExtra)
myTable = tableGrob(tab)
grid.arrange(myTable, myPlot, nrow = 1)
myplot <- ggplot(full, aes(x = Steps, y = RMSE, col = Model)) +
geom_line(size = 1.5) +
geom_point(size = 4) +
scale_fill_continuous(name = "Model",
labels = c("A", "B", "C", "D"))
grid.arrange(myTable, myPlot, nrow = 1)
grid.arrange(myTable, myplot, nrow = 1)
tab
data(iris)
tab <- data.frame(Steps = 1:10, round(all_res, 2))
colnames(tab) <- c("Steps Ahead",
"bmrvarx",
expression("bvar_cont"[12]),
"bvar_cat",
"bvar_cat")
myTable = tableGrob(tab)
grid.arrange(myTable, myplot, nrow = 1)
colnames(tab) <- c("Steps Ahead",
"bmrvarx",
expression("bvar"[cont]),
"bvar_cat",
"bvar_cat")
data(iris)
tab <- data.frame(Steps = 1:10, round(all_res, 2))
colnames(tab) <- c("Steps Ahead",
"bmrvarx",
expression("bvar"["cont"]),
"bvar_cat",
"bvar_cat")
myTable = tableGrob(tab)
myplot <- ggplot(full, aes(x = Steps, y = RMSE, col = Model)) +
geom_line(size = 1.5) +
geom_point(size = 4) +
scale_fill_continuous(name = "Model",
labels = c("A", "B", "C", "D"))
grid.arrange(myTable, myplot, nrow = 1)
grid.draw(myTable)
tab <- data.frame(Steps = 1:10, round(all_res, 2))
colnames(tab) <- c("Steps Ahead",
"bmrvarx",
"bvar_cont",
"bvar_ord",
"AR1")
grid.draw(myTable)
myplot <- ggplot(full, aes(x = Steps, y = RMSE, col = Model)) +
geom_line(size = 1.5) +
geom_point(size = 4) +
scale_fill_continuous(name = "Model",
labels = c("A", "B", "C", "D"))
grid.arrange(myTable, myplot, nrow = 1)
colnames(tab) <- c("Steps Ahead",
"bmrvarx",
"bvar_cont",
"bvar_ord",
"AR1")
grid.draw(myTable)
myTable = tableGrob(tab)
tab <- data.frame(Steps = 1:10, round(all_res, 2))
colnames(tab) <- c("Steps Ahead",
"bmrvarx",
"bvar_cont",
"bvar_ord",
"AR1")
myTable = tableGrob(tab)
myplot <- ggplot(full, aes(x = Steps, y = RMSE, col = Model)) +
geom_line(size = 1.5) +
geom_point(size = 4) +
scale_fill_continuous(name = "Model",
labels = c("A", "B", "C", "D"))
grid.arrange(myTable, myplot, nrow = 1)
grid.arrange(myTable, myplot, nrow = 1, rows = NULL)
grid.arrange(myTable, myplot, nrow = 1, row.names = FALSE)
myTable = tableGrob(tab, rows = NULL)
myplot <- ggplot(full, aes(x = Steps, y = RMSE, col = Model)) +
geom_line(size = 1.5) +
geom_point(size = 4) +
scale_fill_continuous(name = "Model",
labels = c("A", "B", "C", "D"))
grid.arrange(myTable, myplot, nrow = 1)
myplot <- ggplot(full, aes(x = Steps, y = RMSE, col = Model)) +
geom_line(size = 1.5) +
geom_point(size = 4) +
scale_fill_continuous(name = "Model",
labels = c("A", "B", "C", "D")) +
xlab("Steps Ahead")
grid.arrange(myTable, myplot, nrow = 1)
myplot <- ggplot(full, aes(x = Steps, y = RMSE, col = Model)) +
geom_line(size = 1.5) +
geom_point(size = 4) +
scale_fill_continuous(name = "Model",
labels = c("A", "B", "C", "D")) +
xlab("Steps Ahead") +
ylim(0, 1.4)
grid.arrange(myplot, myTable, nrow = 1)
grid.arrange(myplot, myTable, nrow = 1)
tab <- data.frame(Steps = 1:10, round(all_res, 3))
colnames(tab) <- c("Step",
"bmrvarx",
"bvar_cont",
"bvar_ord",
"AR1")
myTable = tableGrob(tab, rows = NULL)
myplot <- ggplot(full, aes(x = Steps, y = RMSE, col = Model)) +
geom_line(size = 1.5) +
geom_point(size = 4) +
scale_fill_continuous(name = "Model",
labels = c("A", "B", "C", "D")) +
xlab("Steps Ahead") +
ylim(0, 1.4)
grid.arrange(myplot, myTable, nrow = 1)
tab <- data.frame(Steps = 1:10, signif(all_res, 3))
tab
tab <- data.frame(Steps = 1:10, signif(all_res, 3))
colnames(tab) <- c("Step",
"bmrvarx",
"bvar_cont",
"bvar_ord",
"AR1")
myTable = tableGrob(tab, rows = NULL)
myplot <- ggplot(full, aes(x = Steps, y = RMSE, col = Model)) +
geom_line(size = 1.5) +
geom_point(size = 4) +
scale_fill_continuous(name = "Model",
labels = c("A", "B", "C", "D")) +
xlab("Steps Ahead") +
ylim(0, 1.4)
grid.arrange(myplot, myTable, nrow = 1)
myTable
tab
## RMSE plot
g_plot <- ggplot(full, aes(x = Steps, y = RMSE, col = Model)) +
geom_line(size = 1.5) +
geom_point(size = 4) +
scale_fill_continuous(name = "Model",
labels = c("A", "B", "C", "D")) +
xlab("Steps Ahead") +
ylim(0, 1.4)
## Combine into single object and save
obj <- arrangeGrob(myplot, myTable, nrow = 1)
## DF for plotting
full <- data.frame(
RMSE = c(all_res[, 1], all_res[, 2], all_res[, 3], all_res[, 4]),
Model = rep(c("bmrvarx", "bvar_cont", "bvar_cat", "AR1"), each = 10),
Steps = rep(1:10, 4))
full$Model <- factor(full$Model, levels = c("bmrvarx", "bvar_cont",
"bvar_cat", "AR1"))
## RMSE plot
g_plot <- ggplot(full, aes(x = Steps, y = RMSE, col = Model)) +
geom_line(size = 1.5) +
geom_point(size = 4) +
scale_fill_continuous(name = "Model",
labels = c("A", "B", "C", "D")) +
xlab("Steps Ahead") +
ylim(0, 1.4)
## Table as a grob
tab <- data.frame(Steps = 1:10, signif(all_res, 3))
colnames(tab) <- c("Step", "bmrvarx", "bvar_cont", "bvar_ord", "AR1")
g_tab <- tableGrob(tab, rows = NULL)
## Combine into single object and save
obj <- arrangeGrob(myplot, g_plot, nrow = 1)
ggsave("./Summary Objects/simulation_prediction_results.eps", obj)
library(gridExtra)
library(ggplot2)
library(xtable)
setwd("C:\\Users\\Nick\\Dropbox\\_Thesis\\Time Series Paper")
res <- array(NA, c(10, 4, 500))
for(i in 1:500) {
f <- paste0("./Fitted Objects\\all_preds", i , ".RDS")
preds <- readRDS(f)
res[,1, i] <- preds$preds_varx[, 6]
res[,2, i] <- preds$preds_bvar[, 6]
res[,3, i] <- preds$preds_bvar_discrete[, 6]
res[,4, i] <- preds$preds_freq[, 6]
}
## RMSE by model
all_res <- apply(res, c(1, 2), function(x) sqrt(mean(x, na.rm = T)))
# Table and plot of RMSE results ------------------------------------------
## DF for plotting
full <- data.frame(
RMSE = c(all_res[, 1], all_res[, 2], all_res[, 3], all_res[, 4]),
Model = rep(c("bmrvarx", "bvar_cont", "bvar_cat", "AR1"), each = 10),
Steps = rep(1:10, 4))
full$Model <- factor(full$Model, levels = c("bmrvarx", "bvar_cont",
"bvar_cat", "AR1"))
## RMSE plot
g_plot <- ggplot(full, aes(x = Steps, y = RMSE, col = Model)) +
geom_line(size = 1.5) +
geom_point(size = 4) +
scale_fill_continuous(name = "Model",
labels = c("A", "B", "C", "D")) +
xlab("Steps Ahead") +
ylim(0, 1.4)
## Table as a grob
tab <- data.frame(Steps = 1:10, signif(all_res, 3))
colnames(tab) <- c("Step", "bmrvarx", "bvar_cont", "bvar_ord", "AR1")
g_tab <- tableGrob(tab, rows = NULL)
## Combine into single object and save
obj <- arrangeGrob(myplot, g_plot, nrow = 1)
ggsave("./Summary Objects/simulation_prediction_results.eps", obj)
## Combine into single object and save
obj <- arrangeGrob(g_plot, g_plot, nrow = 1)
ggsave("./Summary Objects/simulation_prediction_results.eps", obj)
ggsave("./Summary Objects/simulation_prediction_results.pdf", obj,
width = 10, height = 6, units = "cm")
ggsave("./Summary Objects/simulation_prediction_results.pdf", obj,
width = 14, height = 8, units = "cm")
tab <- data.frame(Steps = 1:10, signif(all_res, 3))
colnames(tab) <- c("Step", "bmrvarx", "bvar_cont", "bvar_ord", "AR1")
g_tab <- tableGrob(tab, rows = NULL)
## Combine into single object and save
obj <- arrangeGrob(g_plot, g_tab, nrow = 1)
ggsave("./Summary Objects/simulation_prediction_results.pdf", obj,
width = 14, height = 8, units = "cm")
ggsave("./Summary Objects/simulation_prediction_results.pdf", obj,
width = 20, height = 8, units = "cm")
ggsave("./Summary Objects/simulation_prediction_results.pdf", obj,
width = 18, height = 8, units = "cm")
ggsave("./Summary Objects/simulation_prediction_results.pdf", obj,
width = 20, height = 8, units = "cm")
g_plot <- ggplot(full, aes(x = Steps, y = RMSE, col = Model)) +
geom_line(size = 1.5) +
geom_point(size = 2) +
scale_fill_continuous(name = "Model",
labels = c("A", "B", "C", "D")) +
xlab("Steps Ahead") +
ylim(0, 1.4)
## Table as a grob
tab <- data.frame(Steps = 1:10, signif(all_res, 3))
colnames(tab) <- c("Step", "bmrvarx", "bvar_cont", "bvar_ord", "AR1")
g_tab <- tableGrob(tab, rows = NULL)
## Combine into single object and save
obj <- arrangeGrob(g_plot, g_tab, nrow = 1)
ggsave("./Summary Objects/simulation_prediction_results.pdf", obj,
width = 20, height = 8, units = "cm")
## RMSE plot
g_plot <- ggplot(full, aes(x = Steps, y = RMSE, col = Model)) +
geom_line(size = 1.5) +
geom_point(size = 2) +
scale_fill_continuous(name = "Model",
labels = c("A", "B", "C", "D")) +
xlab("Steps Ahead") +
ylim(0, 1.4) +
theme_bw()
## Table as a grob
tab <- data.frame(Steps = 1:10, signif(all_res, 3))
colnames(tab) <- c("Step", "bmrvarx", "bvar_cont", "bvar_ord", "AR1")
g_tab <- tableGrob(tab, rows = NULL)
## Combine into single object and save
obj <- arrangeGrob(g_plot, g_tab, nrow = 1)
ggsave("./Summary Objects/simulation_prediction_results.pdf", obj,
width = 20, height = 8, units = "cm")
ggsave("./Summary Objects/simulation_prediction_results.eps", obj,
width = 20, height = 8, units = "cm")
