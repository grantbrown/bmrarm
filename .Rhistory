xlab = "Iterations", ylim = c(1.8, 3.15))
lines(mcmc(mod_list[[2]]$samps$draws$res_cuts[4, ]), col = 2)
lines(mcmc(mod_list[[3]]$samps$draws$res_cuts[4, ]), col = 3)
lines(mcmc(mod_list[[4]]$samps$draws$res_cuts[4, ]), col = 4)
text(3200, 3.12, "GR Upper CI = 1.007", cex = 1.2)
max_dens <- max(c(density(mod_list[[4]]$samps$draws$res_cuts[4, ])$y,
density(mod_list[[2]]$samps$draws$res_cuts[4, ])$y,
density(mod_list[[1]]$samps$draws$res_cuts[4, ])$y))
plot(density(mod_list[[1]]$samps$draws$res_cuts[4, ]), type = "l", lwd = 3,
ylab = expression(gamma[3]), ylim = c(0, max_dens),
main = expression("Posterior Density: " ~ gamma[3]))
lines(density(mcmc(mod_list[[2]]$samps$draws$res_cuts[4, ])), col = 2, lwd = 3)
lines(density(mcmc(mod_list[[3]]$samps$draws$res_cuts[4, ])), col = 3, lwd = 3)
lines(density(mcmc(mod_list[[4]]$samps$draws$res_cuts[4, ])), col = 4, lwd = 3)
legend("topright", legend = c("Chain 1", "Chain 2", "Chain 3", "Chain 4"),
lty = 1, col = 1:4, cex = 1.1, lwd = 3)
plot(mod_list[[1]]$samps$draws$res_sigma[1, ], type = "l",
ylab = expression(R[11]), main = expression("Traceplot: " ~ R[11]),
xlab = "Iterations", ylim = c(0.15, 0.6))
lines(mcmc(mod_list[[2]]$samps$draws$res_sigma[1, ]), col = 2)
lines(mcmc(mod_list[[3]]$samps$draws$res_sigma[1, ]), col = 3)
lines(mcmc(mod_list[[4]]$samps$draws$res_sigma[1, ]), col = 4)
text(3200, 0.58, "GR Upper CI = 1.008", cex = 1.2)
max_dens <- max(c(density(mod_list[[4]]$samps$draws$res_sigma[1, ])$y,
density(mod_list[[2]]$samps$draws$res_sigma[1, ])$y,
density(mod_list[[3]]$samps$draws$res_sigma[1, ])$y))
plot(density(mod_list[[1]]$samps$draws$res_sigma[1, ]), type = "l", lwd = 3,
ylab = expression(R[11]), ylim = c(0, max_dens),
main = expression("Posterior Density: " ~ R[11]))
lines(density(mcmc(mod_list[[2]]$samps$draws$res_sigma[1, ])), col = 2, lwd = 3)
lines(density(mcmc(mod_list[[3]]$samps$draws$res_sigma[1, ])), col = 3, lwd = 3)
lines(density(mcmc(mod_list[[4]]$samps$draws$res_sigma[1, ])), col = 4, lwd = 3)
legend("topright", legend = c("Chain 1", "Chain 2", "Chain 3", "Chain 4"),
lty = 1, col = 1:4, cex = 1.2, lwd = 3)
max_dens <- max(c(density(mod_list[[4]]$samps$draws$res_pat_sig[1, ])$y,
density(mod_list[[2]]$samps$draws$res_pat_sig[1, ])$y,
density(mod_list[[3]]$samps$draws$res_pat_sig[1, ])$y))
plot(mod_list2[[1]]$samps$draws$res_pat_sig[1, ], type = "l",
ylab = expression(Sigma[alpha][11]), main = expression("Traceplot: " ~ Sigma[alpha][11]),
xlab = "Iterations")
lines(mcmc(mod_list2[[2]]$samps$draws$res_pat_sig[1, ]), col = 2)
lines(mcmc(mod_list2[[3]]$samps$draws$res_pat_sig[1, ]), col = 3)
lines(mcmc(mod_list2[[4]]$samps$draws$res_pat_sig[1, ]), col = 4)
text(3200, 0.545, "GR Upper CI = 1.013", cex = 1.2)
max_dens <- max(c(density(mod_list[[4]]$samps$draws$res_pat_sig[1, ])$y,
density(mod_list[[2]]$samps$draws$res_pat_sig[1, ])$y,
density(mod_list[[3]]$samps$draws$res_pat_sig[1, ])$y))
plot(mod_list[[1]]$samps$draws$res_pat_sig[1, ], type = "l",
ylab = expression(Sigma[alpha][11]), main = expression("Traceplot: " ~ Sigma[alpha][11]),
xlab = "Iterations")
lines(mcmc(mod_list[[2]]$samps$draws$res_pat_sig[1, ]), col = 2)
lines(mcmc(mod_list[[3]]$samps$draws$res_pat_sig[1, ]), col = 3)
lines(mcmc(mod_list[[4]]$samps$draws$res_pat_sig[1, ]), col = 4)
text(3200, 0.545, "GR Upper CI = 1.013", cex = 1.2)
max_dens <- max(c(density(mod_list[[4]]$samps$draws$res_pat_sig[1, ])$y,
density(mod_list[[2]]$samps$draws$res_pat_sig[1, ])$y,
density(mod_list[[3]]$samps$draws$res_pat_sig[1, ])$y))
plot(mod_list[[1]]$samps$draws$res_pat_sig[1, ], type = "l",
ylab = expression(Sigma[alpha][11]), main = expression("Traceplot: " ~ Sigma[alpha][11]),
xlab = "Iterations", ylim = c(0.5))
lines(mcmc(mod_list[[2]]$samps$draws$res_pat_sig[1, ]), col = 2)
lines(mcmc(mod_list[[3]]$samps$draws$res_pat_sig[1, ]), col = 3)
lines(mcmc(mod_list[[4]]$samps$draws$res_pat_sig[1, ]), col = 4)
text(3200, 0.545, "GR Upper CI = 1.013", cex = 1.2)
plot(mod_list[[1]]$samps$draws$res_pat_sig[1, ], type = "l",
ylab = expression(Sigma[alpha][11]), main = expression("Traceplot: " ~ Sigma[alpha][11]),
xlab = "Iterations", ylim = c(0.5))
max_dens <- max(c(density(mod_list[[4]]$samps$draws$res_pat_sig[1, ])$y,
density(mod_list[[2]]$samps$draws$res_pat_sig[1, ])$y,
density(mod_list[[3]]$samps$draws$res_pat_sig[1, ])$y))
plot(mod_list[[1]]$samps$draws$res_pat_sig[1, ], type = "l",
ylab = expression(Sigma[alpha][11]), main = expression("Traceplot: " ~ Sigma[alpha][11]),
xlab = "Iterations", ylim = c(0, 0.5))
lines(mcmc(mod_list[[2]]$samps$draws$res_pat_sig[1, ]), col = 2)
lines(mcmc(mod_list[[3]]$samps$draws$res_pat_sig[1, ]), col = 3)
lines(mcmc(mod_list[[4]]$samps$draws$res_pat_sig[1, ]), col = 4)
text(3200, 0.545, "GR Upper CI = 1.013", cex = 1.2)
max_dens <- max(c(density(mod_list[[4]]$samps$draws$res_pat_sig[1, ])$y,
density(mod_list[[2]]$samps$draws$res_pat_sig[1, ])$y,
density(mod_list[[3]]$samps$draws$res_pat_sig[1, ])$y))
plot(mod_list[[1]]$samps$draws$res_pat_sig[1, ], type = "l",
ylab = expression(Sigma[alpha][11]), main = expression("Traceplot: " ~ Sigma[alpha][11]),
xlab = "Iterations", ylim = c(0, 0.6))
lines(mcmc(mod_list[[2]]$samps$draws$res_pat_sig[1, ]), col = 2)
lines(mcmc(mod_list[[3]]$samps$draws$res_pat_sig[1, ]), col = 3)
lines(mcmc(mod_list[[4]]$samps$draws$res_pat_sig[1, ]), col = 4)
text(3200, 0.545, "GR Upper CI = 1.013", cex = 1.2)
max_dens <- max(c(density(mod_list[[4]]$samps$draws$res_pat_sig[1, ])$y,
density(mod_list[[2]]$samps$draws$res_pat_sig[1, ])$y,
density(mod_list[[3]]$samps$draws$res_pat_sig[1, ])$y))
plot(mod_list[[1]]$samps$draws$res_pat_sig[1, ], type = "l",
ylab = expression(Sigma[alpha][11]), main = expression("Traceplot: " ~ Sigma[alpha][11]),
xlab = "Iterations", ylim = c(0, 0.65))
lines(mcmc(mod_list[[2]]$samps$draws$res_pat_sig[1, ]), col = 2)
lines(mcmc(mod_list[[3]]$samps$draws$res_pat_sig[1, ]), col = 3)
lines(mcmc(mod_list[[4]]$samps$draws$res_pat_sig[1, ]), col = 4)
text(3200, 0.545, "GR Upper CI = 1.013", cex = 1.2)
max_dens <- max(c(density(mod_list[[4]]$samps$draws$res_pat_sig[1, ])$y,
density(mod_list[[2]]$samps$draws$res_pat_sig[1, ])$y,
density(mod_list[[3]]$samps$draws$res_pat_sig[1, ])$y))
plot(mod_list[[1]]$samps$draws$res_pat_sig[1, ], type = "l",
ylab = expression(Sigma[alpha][11]), main = expression("Traceplot: " ~ Sigma[alpha][11]),
xlab = "Iterations", ylim = c(0, 0.7))
lines(mcmc(mod_list[[2]]$samps$draws$res_pat_sig[1, ]), col = 2)
lines(mcmc(mod_list[[3]]$samps$draws$res_pat_sig[1, ]), col = 3)
lines(mcmc(mod_list[[4]]$samps$draws$res_pat_sig[1, ]), col = 4)
text(3200, 0.545, "GR Upper CI = 1.013", cex = 1.2)
max_dens <- max(c(density(mod_list[[4]]$samps$draws$res_pat_sig[1, ])$y,
density(mod_list[[2]]$samps$draws$res_pat_sig[1, ])$y,
density(mod_list[[3]]$samps$draws$res_pat_sig[1, ])$y))
plot(mod_list[[1]]$samps$draws$res_pat_sig[1, ], type = "l",
ylab = expression(Sigma[alpha][11]), main = expression("Traceplot: " ~ Sigma[alpha][11]),
xlab = "Iterations", ylim = c(0, 0.7))
lines(mcmc(mod_list[[2]]$samps$draws$res_pat_sig[1, ]), col = 2)
lines(mcmc(mod_list[[3]]$samps$draws$res_pat_sig[1, ]), col = 3)
lines(mcmc(mod_list[[4]]$samps$draws$res_pat_sig[1, ]), col = 4)
text(3200, 0.67, "GR Upper CI = 1.013", cex = 1.2)
plot(density(mod_list[[1]]$samps$draws$res_pat_sig[1, ]), type = "l", lwd = 3,
ylab = expression(Sigma[alpha][11]), ylim = c(0, max_dens),
main = expression("Posterior Density: " ~ Sigma[alpha][11]))
lines(density(mcmc(mod_list[[2]]$samps$draws$res_pat_sig[1, ])), col = 2, lwd = 3)
lines(density(mcmc(mod_list[[3]]$samps$draws$res_pat_sig[1, ])), col = 3, lwd = 3)
lines(density(mcmc(mod_list[[4]]$samps$draws$res_pat_sig[1, ])), col = 4, lwd = 3)
legend("topright", legend = c("Chain 1", "Chain 2", "Chain 3", "Chain 4"),
lty = 1, col = 1:4, cex = 1.2, lwd = 3)
max_dens <- max(c(density(mod_list[[4]]$samps$draws$res_pat_sig[6, ])$y,
density(mod_list[[2]]$samps$draws$res_pat_sig[6, ])$y,
density(mod_list[[3]]$samps$draws$res_pat_sig[6, ])$y))
plot(mod_list[[1]]$samps$draws$res_pat_sig[6, ], type = "l",
ylab = expression(Sigma[alpha][22]), main = expression("Traceplot: " ~ Sigma[alpha][22]),
xlab = "Iterations")
lines(mcmc(mod_list[[2]]$samps$draws$res_pat_sig[6, ]), col = 2)
lines(mcmc(mod_list[[3]]$samps$draws$res_pat_sig[6, ]), col = 3)
lines(mcmc(mod_list[[4]]$samps$draws$res_pat_sig[6, ]), col = 4)
text(3200, 0.047, "GR Upper CI = 1.004", cex = 1.2)
plot(mod_list[[1]]$samps$draws$res_pat_sig[6, ], type = "l",
ylab = expression(Sigma[alpha][22]), main = expression("Traceplot: " ~ Sigma[alpha][22]),
xlab = "Iterations", ylim = c(0, 0.5))
lines(mcmc(mod_list[[2]]$samps$draws$res_pat_sig[6, ]), col = 2)
lines(mcmc(mod_list[[3]]$samps$draws$res_pat_sig[6, ]), col = 3)
lines(mcmc(mod_list[[4]]$samps$draws$res_pat_sig[6, ]), col = 4)
text(3200, 0.047, "GR Upper CI = 1.004", cex = 1.2)
plot(mod_list[[1]]$samps$draws$res_pat_sig[6, ], type = "l",
ylab = expression(Sigma[alpha][22]), main = expression("Traceplot: " ~ Sigma[alpha][22]),
xlab = "Iterations", ylim = c(0, 0.05))
lines(mcmc(mod_list[[2]]$samps$draws$res_pat_sig[6, ]), col = 2)
lines(mcmc(mod_list[[3]]$samps$draws$res_pat_sig[6, ]), col = 3)
lines(mcmc(mod_list[[4]]$samps$draws$res_pat_sig[6, ]), col = 4)
text(3200, 0.047, "GR Upper CI = 1.004", cex = 1.2)
max_dens <- max(c(density(mod_list[[4]]$samps$draws$res_pat_sig[6, ])$y,
density(mod_list[[2]]$samps$draws$res_pat_sig[6, ])$y,
density(mod_list[[3]]$samps$draws$res_pat_sig[6, ])$y))
plot(mod_list[[1]]$samps$draws$res_pat_sig[6, ], type = "l",
ylab = expression(Sigma[alpha][22]), main = expression("Traceplot: " ~ Sigma[alpha][22]),
xlab = "Iterations", ylim = c(0, 0.045))
lines(mcmc(mod_list[[2]]$samps$draws$res_pat_sig[6, ]), col = 2)
lines(mcmc(mod_list[[3]]$samps$draws$res_pat_sig[6, ]), col = 3)
lines(mcmc(mod_list[[4]]$samps$draws$res_pat_sig[6, ]), col = 4)
text(3200, 0.042, "GR Upper CI = 1.004", cex = 1.2)
par(mfrow=c(2,2))
max_dens <- max(c(density(mod_list[[4]]$samps$draws$res_pat_sig[1, ])$y,
density(mod_list[[2]]$samps$draws$res_pat_sig[1, ])$y,
density(mod_list[[3]]$samps$draws$res_pat_sig[1, ])$y))
plot(mod_list[[1]]$samps$draws$res_pat_sig[1, ], type = "l",
ylab = expression(Sigma[alpha][11]), main = expression("Traceplot: " ~ Sigma[alpha][11]),
xlab = "Iterations", ylim = c(0, 0.7))
lines(mcmc(mod_list[[2]]$samps$draws$res_pat_sig[1, ]), col = 2)
lines(mcmc(mod_list[[3]]$samps$draws$res_pat_sig[1, ]), col = 3)
lines(mcmc(mod_list[[4]]$samps$draws$res_pat_sig[1, ]), col = 4)
text(3200, 0.67, "GR Upper CI = 1.013", cex = 1.2)
plot(density(mod_list[[1]]$samps$draws$res_pat_sig[1, ]), type = "l", lwd = 3,
ylab = expression(Sigma[alpha][11]), ylim = c(0, max_dens),
main = expression("Posterior Density: " ~ Sigma[alpha][11]))
lines(density(mcmc(mod_list[[2]]$samps$draws$res_pat_sig[1, ])), col = 2, lwd = 3)
lines(density(mcmc(mod_list[[3]]$samps$draws$res_pat_sig[1, ])), col = 3, lwd = 3)
lines(density(mcmc(mod_list[[4]]$samps$draws$res_pat_sig[1, ])), col = 4, lwd = 3)
legend("topright", legend = c("Chain 1", "Chain 2", "Chain 3", "Chain 4"),
lty = 1, col = 1:4, cex = 1.2, lwd = 3)
# Covariance terms --------------------------------------------------------
max_dens <- max(c(density(mod_list[[4]]$samps$draws$res_pat_sig[6, ])$y,
density(mod_list[[2]]$samps$draws$res_pat_sig[6, ])$y,
density(mod_list[[3]]$samps$draws$res_pat_sig[6, ])$y))
plot(mod_list[[1]]$samps$draws$res_pat_sig[6, ], type = "l",
ylab = expression(Sigma[alpha][22]), main = expression("Traceplot: " ~ Sigma[alpha][22]),
xlab = "Iterations", ylim = c(0, 0.045))
lines(mcmc(mod_list[[2]]$samps$draws$res_pat_sig[6, ]), col = 2)
lines(mcmc(mod_list[[3]]$samps$draws$res_pat_sig[6, ]), col = 3)
lines(mcmc(mod_list[[4]]$samps$draws$res_pat_sig[6, ]), col = 4)
text(3200, 0.042, "GR Upper CI = 1.004", cex = 1.2)
plot(density(mod_list[[1]]$samps$draws$res_pat_sig[6, ]), type = "l", lwd = 3,
ylab = expression(Sigma[alpha][22]), ylim = c(0, max_dens),
main = expression("Posterior Density: " ~ Sigma[alpha][22]))
lines(density(mcmc(mod_list[[2]]$samps$draws$res_pat_sig[6, ])), col = 2, lwd = 3)
lines(density(mcmc(mod_list[[3]]$samps$draws$res_pat_sig[6, ])), col = 3, lwd = 3)
lines(density(mcmc(mod_list[[4]]$samps$draws$res_pat_sig[6, ])), col = 4, lwd = 3)
legend("topright", legend = c("Chain 1", "Chain 2", "Chain 3", "Chain 4"),
lty = 1, col = 1:4, cex = 1.2, lwd = 3)
library(magrittr)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(tidyr)
library(coda)
library(ggmcmc)
library(xtable)
library(bmrarm)
setwd("C:\\Users\\Nick\\Dropbox\\_Thesis\\bmrvar\\long_sims")
source("../run_apps_sims//helper_functions.R")
## Collect objects
max_mod <- 4
mod_list <- list()
obs <- c(1:max_mod)
for(i in 1:length(obs)){
#mod_list[[i]] <- readRDS(paste0("Z:\\final_bmrarm\\bmrarm_samples\\leish_data_int_model_siw", i, ".RDS"))
#mod_list[[i]] <- readRDS(paste0("Z:\\final_bmrarm\\bmrarm_samples\\leish_data_slope_model", i, ".RDS"))
mod_list[[i]] <- readRDS(paste0("Z:\\final_bmrarm\\bmrarm_samples\\leish_data_ar_model", i, ".RDS"))
print(mod_list[[i]]$runtime)
}
full_mod <- mod_list[[1]]$samps
## Combined into a single model for DIC
full_mod$draws$res_beta <- cbind(mod_list[[1]]$samps$draws$res_beta,
mod_list[[2]]$samps$draws$res_beta,
mod_list[[3]]$samps$draws$res_beta,
mod_list[[4]]$samps$draws$res_beta)
full_mod$draws$res_pat_sig <- cbind(mod_list[[1]]$samps$draws$res_pat_sig,
mod_list[[2]]$samps$draws$res_pat_sig,
mod_list[[3]]$samps$draws$res_pat_sig,
mod_list[[4]]$samps$draws$res_pat_sig)
full_mod$draws$res_sigma <- cbind(mod_list[[1]]$samps$draws$res_sigma,
mod_list[[2]]$samps$draws$res_sigma,
mod_list[[3]]$samps$draws$res_sigma,
mod_list[[4]]$samps$draws$res_sigma)
full_mod$draws$res_cuts <- cbind(mod_list[[1]]$samps$draws$res_cuts,
mod_list[[2]]$samps$draws$res_cuts,
mod_list[[3]]$samps$draws$res_cuts,
mod_list[[4]]$samps$draws$res_cuts)
full_mod$draws$res_ar <- c(mod_list[[1]]$samps$draws$res_ar, mod_list[[2]]$samps$draws$res_ar,
mod_list[[3]]$samps$draws$res_ar, mod_list[[4]]$samps$draws$res_ar)
full_mod$draws$res_y <- abind::abind(mod_list[[1]]$samps$draws$res_y,
mod_list[[2]]$samps$draws$res_y,
mod_list[[3]]$samps$draws$res_y,
mod_list[[4]]$samps$draws$res_y, along = 3)
full_mod$draws$res_pat_eff <- abind::abind(mod_list[[1]]$samps$draws$res_pat_eff,
mod_list[[2]]$samps$draws$res_pat_eff,
mod_list[[3]]$samps$draws$res_pat_eff,
mod_list[[4]]$samps$draws$res_pat_eff, along = 3)
summary(mcmc(full_mod$draws$res_ar))
## Extended X matrix
X_extend <- mod_list[[1]]$data %>%
group_by(ID) %>%
filter(time == max(time)) %>%
slice(rep(1, each = 4)) %>%
mutate(time = time + row_number(), log_sla = NA, leish_model = NA) %>%
rbind(mod_list[[1]]$data) %>%
ungroup() %>%
arrange(ID, time) %>%
mutate(forecast = as.numeric(is.na(log_sla) & is.na(leish_model)))
## Extended Z kron
Z <- matrix(rep(1, nrow(X_extend)), ncol = 1)
Z <- cbind(Z, X_extend$time)
Z_kron_for <- kronecker(diag(rep(1, 2)), Z)
X_for <- cbind(1, select(X_extend, treatment, time, age_ind, log_dpp, hunt_M, hunt_W))
full_mod$data$Z_kron_for <- Z_kron_for
full_mod$data$X_for <- X_for
full_mod$data$pat_long_for <- X_extend$pat_idx
samps <- full_mod
## Get forecasts
set.seed(1)
all_preds <- get_preds_bmrarm(full_mod)
## Get forecasts
set.seed(1)
all_preds <- get_preds_bmrarm(full_mod)
saveRDS(all_preds, "./leish_forecasts_final.RDS")
all_preds
saveRDS(all_preds, "./leish_forecasts_final.RDS")
n_samp <- length(all_preds)
all_preds_slope <- all_preds_keep <- all_preds_ord <- matrix(NA, nrow = 48 * 4, ncol = n_samp)
for(i in 1:n_samp){
all_preds_keep[, i] <- as.numeric(t(all_preds[[i]][[1]][,2, ]))
all_preds_ord[, i] <- as.numeric(t(all_preds[[i]][[1]][,1, ]))
print(i)
}
X_extend$sla_pred <- X_extend$sla_025 <- X_extend$sla_975 <-
X_extend$slope_pred <- X_extend$slope_025 <- X_extend$slope_975 <-
X_extend$pred0 <- X_extend$pred1 <- X_extend$pred2 <- X_extend$pred3 <-  NA
X_extend$sla_pred[X_extend$forecast == 1] <- rowMeans(all_preds_keep)
X_extend$sla_025[X_extend$forecast == 1] <- apply(all_preds_keep, 1,
function(x) quantile(x, 0.025))
X_extend$sla_975[X_extend$forecast == 1] <- apply(all_preds_keep, 1,
function(x) quantile(x, 0.975))
X_extend$slope_pred[X_extend$forecast == 1] <- rowMeans(all_preds_slope)
X_extend$slope_025[X_extend$forecast == 1] <- apply(all_preds_slope, 1,
function(x) quantile(x, 0.025))
X_extend$slope_975[X_extend$forecast == 1] <- apply(all_preds_slope, 1,
function(x) quantile(x, 0.975))
X_extend$pred0 <- as.numeric(X_extend$leish_model == 1)
X_extend$pred1 <- as.numeric(X_extend$leish_model == 2)
X_extend$pred2 <- as.numeric(X_extend$leish_model == 3)
X_extend$pred3 <- as.numeric(X_extend$leish_model == 4)
X_extend$pred0[X_extend$forecast == 1] <- rowMeans(all_preds_ord == 1)
X_extend$pred1[X_extend$forecast == 1] <- rowMeans(all_preds_ord == 2)
X_extend$pred2[X_extend$forecast == 1] <- rowMeans(all_preds_ord == 3)
X_extend$pred3[X_extend$forecast == 1] <- rowMeans(all_preds_ord == 4)
X_extend$sla_pred <- X_extend$sla_025 <- X_extend$sla_975 <-
X_extend$slope_pred <- X_extend$slope_025 <- X_extend$slope_975 <-
X_extend$pred0 <- X_extend$pred1 <- X_extend$pred2 <- X_extend$pred3 <-  NA
X_extend$sla_pred[X_extend$forecast == 1] <- rowMeans(all_preds_keep)
X_extend$sla_025[X_extend$forecast == 1] <- apply(all_preds_keep, 1,
function(x) quantile(x, 0.025))
X_extend$sla_975[X_extend$forecast == 1] <- apply(all_preds_keep, 1,
function(x) quantile(x, 0.975))
X_extend$pred0 <- as.numeric(X_extend$leish_model == 1)
X_extend$pred1 <- as.numeric(X_extend$leish_model == 2)
X_extend$pred2 <- as.numeric(X_extend$leish_model == 3)
X_extend$pred3 <- as.numeric(X_extend$leish_model == 4)
X_extend$pred0[X_extend$forecast == 1] <- rowMeans(all_preds_ord == 1)
X_extend$pred1[X_extend$forecast == 1] <- rowMeans(all_preds_ord == 2)
X_extend$pred2[X_extend$forecast == 1] <- rowMeans(all_preds_ord == 3)
X_extend$pred3[X_extend$forecast == 1] <- rowMeans(all_preds_ord == 4)
dat_plot <- filter(X_extend, pat_idx %in% c(2, 4, 6, 8, 9, 10, 11, 14, 15))  %>%
mutate(pat_idx = paste0("Patient ", toupper(letters[dense_rank(pat_idx)])),
Type = ifelse(is.na(sla_pred), "Observation", "Prediction"),
sla_pred = coalesce(sla_pred, log_sla))
ggplot(dat_plot, aes(x = time, y = sla_pred, col = Type)) +
geom_point(size = 2) +
geom_point(aes(x = time, y = slope_pred), size = 2, col = 2) +
geom_errorbar(aes(ymin=sla_025, ymax=sla_975), width=0.8, col = '#619CFF') +
geom_errorbar(aes(ymin=slope_025, ymax=slope_975), width=0.8, col = '#00BA38') +
facet_wrap(.~ pat_idx) +
theme_bw() +
theme(text = element_text(size=18)) +
ylab("Log Anti-SLA") +
xlab("Time from Baseline")
ggplot(dat_plot, aes(x = time, y = sla_pred, col = Type)) +
geom_point(size = 2)
ggplot(dat_plot, aes(x = time, y = sla_pred, col = Type)) +
geom_point(size = 2) +
geom_point(aes(x = time, y = slope_pred), size = 2, col = 2) +
geom_errorbar(aes(ymin=sla_025, ymax=sla_975), width=0.8, col = '#619CFF') +
geom_errorbar(aes(ymin=slope_025, ymax=slope_975), width=0.8, col = '#00BA38') +
facet_wrap(.~ pat_idx)
ggplot(dat_plot, aes(x = time, y = sla_pred, col = Type)) +
geom_point(size = 2) +
geom_point(aes(x = time, y = slope_pred), size = 2, col = 2)
ggplot(dat_plot, aes(x = time, y = sla_pred, col = Type)) +
geom_point(size = 2) +
#geom_point(aes(x = time, y = slope_pred), size = 2, col = 2) +
geom_errorbar(aes(ymin=sla_025, ymax=sla_975), width=0.8, col = '#619CFF') +
geom_errorbar(aes(ymin=slope_025, ymax=slope_975), width=0.8, col = '#00BA38') +
facet_wrap(.~ pat_idx) +
theme_bw() +
theme(text = element_text(size=18)) +
ylab("Log Anti-SLA") +
xlab("Time from Baseline")
ggplot(dat_plot, aes(x = time, y = sla_pred, col = Type)) +
geom_point(size = 2)
ggplot(dat_plot, aes(x = time, y = sla_pred, col = Type)) +
geom_point(size = 2) +
#geom_point(aes(x = time, y = slope_pred), size = 2, col = 2) +
geom_errorbar(aes(ymin=sla_025, ymax=sla_975), width=0.8, col = '#619CFF')
ggplot(dat_plot, aes(x = time, y = sla_pred, col = Type)) +
geom_point(size = 2) +
#geom_point(aes(x = time, y = slope_pred), size = 2, col = 2) +
geom_errorbar(aes(ymin=sla_025, ymax=sla_975), width=0.8, col = '#619CFF') +
geom_errorbar(aes(ymin=slope_025, ymax=slope_975), width=0.8, col = '#00BA38')
ggplot(dat_plot, aes(x = time, y = sla_pred, col = Type)) +
geom_point(size = 2) +
#geom_point(aes(x = time, y = slope_pred), size = 2, col = 2) +
geom_errorbar(aes(ymin=sla_025, ymax=sla_975), width=0.8, col = '#619CFF') +
#geom_errorbar(aes(ymin=slope_025, ymax=slope_975), width=0.8, col = '#00BA38') +
facet_wrap(.~ pat_idx)
ggplot(dat_plot, aes(x = time, y = sla_pred, col = Type)) +
geom_point(size = 2) +
#geom_point(aes(x = time, y = slope_pred), size = 2, col = 2) +
geom_errorbar(aes(ymin=sla_025, ymax=sla_975), width=0.8, col = '#619CFF') +
#geom_errorbar(aes(ymin=slope_025, ymax=slope_975), width=0.8, col = '#00BA38') +
facet_wrap(.~ pat_idx) +
theme_bw() +
theme(text = element_text(size=18)) +
ylab("Log Anti-SLA") +
xlab("Time from Baseline")
ggplot(dat_plot, aes(x = time, y = sla_pred, col = Type)) +
geom_point(size = 2) +
#geom_point(aes(x = time, y = slope_pred), size = 2, col = 2) +
geom_errorbar(aes(ymin=sla_025, ymax=sla_975), width=0.8, col = '#619CFF') +
#geom_errorbar(aes(ymin=slope_025, ymax=slope_975), width=0.8, col = '#00BA38') +
facet_wrap(.~ pat_idx) +
theme_bw() +
theme(text = element_text(size=18)) +
ylab("Log Anti-SLA") +
xlab("Time from Baseline")
ord_data <- pivot_longer(select(X_extend, pat_idx, time, leish_model,
pred0, pred1, pred2, pred3),
cols = c(pred3, pred0, pred1, pred2))
ord_data$name <- factor(ord_data$name, levels = c("pred3", "pred2", "pred1", "pred0"),
labels = c("3",
"2",
"1",
"0"))
dat_plot <- filter(ord_data, pat_idx %in% c(2, 4, 6, 8, 9, 10, 11, 14, 15))  %>%
mutate(pat_idx = paste0("Patient ", toupper(letters[dense_rank(pat_idx)])),
point_val = ifelse(!is.na(leish_model), 0.5, NA))
ggplot(dat_plot, aes(x=time, y=value, fill=name)) +
geom_bar(stat="identity") +
geom_point(aes(x = time, y = point_val), size = 3) +
facet_wrap(.~ pat_idx) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(fill = "LeishVet Score") +
theme_bw() +
theme(text = element_text(size=18)) +
ylab("Probability") +
xlab("Time from Baseline")
ord_data <- pivot_longer(select(X_extend, pat_idx, time, leish_model,
pred0, pred1, pred2, pred3),
cols = c(pred3, pred0, pred1, pred2))
ord_data$name <- factor(ord_data$name, levels = c("pred3", "pred2", "pred1", "pred0"),
labels = c("3",
"2",
"1",
"0"))
dat_plot <- filter(ord_data, pat_idx %in% c(2, 4, 6, 8, 9, 10, 11, 14, 15))  %>%
mutate(pat_idx = paste0("Patient ", toupper(letters[dense_rank(pat_idx)])),
point_val = ifelse(!is.na(leish_model), 0.5, NA))
ggplot(dat_plot, aes(x=time, y=value, fill=name)) +
geom_bar(stat="identity") +
geom_point(aes(x = time, y = point_val), size = 3) +
facet_wrap(.~ pat_idx) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(fill = "LeishVet Score") +
theme_bw() +
theme(text = element_text(size=18)) +
ylab("Probability") +
xlab("Time from Baseline")
ggplot(dat_plot, aes(x = time, y = sla_pred, col = Type)) +
geom_point(size = 2) +
#geom_point(aes(x = time, y = slope_pred), size = 2, col = 2) +
geom_errorbar(aes(ymin=sla_025, ymax=sla_975), width=0.8, col = '#619CFF') +
#geom_errorbar(aes(ymin=slope_025, ymax=slope_975), width=0.8, col = '#00BA38') +
facet_wrap(.~ pat_idx) +
theme_bw() +
theme(text = element_text(size=18)) +
ylab("Log Anti-SLA") +
xlab("Time from Baseline")
dat_plot <- filter(X_extend, pat_idx %in% c(2, 4, 6, 8, 9, 10, 11, 14, 15))  %>%
mutate(pat_idx = paste0("Patient ", toupper(letters[dense_rank(pat_idx)])),
Type = ifelse(is.na(sla_pred), "Observation", "Prediction"),
sla_pred = coalesce(sla_pred, log_sla))
ggplot(dat_plot, aes(x = time, y = sla_pred, col = Type)) +
geom_point(size = 2) +
#geom_point(aes(x = time, y = slope_pred), size = 2, col = 2) +
geom_errorbar(aes(ymin=sla_025, ymax=sla_975), width=0.8, col = '#619CFF') +
#geom_errorbar(aes(ymin=slope_025, ymax=slope_975), width=0.8, col = '#00BA38') +
facet_wrap(.~ pat_idx) +
theme_bw() +
theme(text = element_text(size=18)) +
ylab("Log Anti-SLA") +
xlab("Time from Baseline")
ord_data <- pivot_longer(select(X_extend, pat_idx, time, leish_model,
pred0, pred1, pred2, pred3),
cols = c(pred3, pred0, pred1, pred2))
ord_data$name <- factor(ord_data$name, levels = c("pred3", "pred2", "pred1", "pred0"),
labels = c("3",
"2",
"1",
"0"))
dat_plot <- filter(ord_data, pat_idx %in% c(2, 4, 6, 8, 9, 10, 11, 14, 15))  %>%
mutate(pat_idx = paste0("Patient ", toupper(letters[dense_rank(pat_idx)])),
point_val = ifelse(!is.na(leish_model), 0.5, NA))
ggplot(dat_plot, aes(x=time, y=value, fill=name)) +
geom_bar(stat="identity") +
geom_point(aes(x = time, y = point_val), size = 3) +
facet_wrap(.~ pat_idx) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(fill = "LeishVet Score") +
theme_bw() +
theme(text = element_text(size=18)) +
ylab("Probability") +
xlab("Time from Baseline")
dat_plot <- filter(X_extend, pat_idx %in% c(2, 4, 6, 8, 9, 10, 11, 14, 15))  %>%
mutate(pat_idx = paste0("Patient ", toupper(letters[dense_rank(pat_idx)])),
Type = ifelse(is.na(sla_pred), "Observation", "Prediction"),
sla_pred = coalesce(sla_pred, log_sla))
ggplot(dat_plot, aes(x = time, y = sla_pred, col = Type)) +
geom_point(size = 2) +
#geom_point(aes(x = time, y = slope_pred), size = 2, col = 2) +
geom_errorbar(aes(ymin=sla_025, ymax=sla_975), width=0.8, col = '#00BA38') +
#geom_errorbar(aes(ymin=slope_025, ymax=slope_975), width=0.8, col = '#00BA38') +
facet_wrap(.~ pat_idx) +
theme_bw() +
theme(text = element_text(size=18)) +
ylab("Log Anti-SLA") +
xlab("Time from Baseline")
ggplot(dat_plot, aes(x = time, y = sla_pred, col = Type)) +
geom_point(size = 2) +
#geom_point(aes(x = time, y = slope_pred), size = 2, col = 2) +
geom_errorbar(aes(ymin=sla_025, ymax=sla_975), width=0.8) +
#geom_errorbar(aes(ymin=slope_025, ymax=slope_975), width=0.8, col = '#00BA38') +
facet_wrap(.~ pat_idx) +
theme_bw() +
theme(text = element_text(size=18)) +
ylab("Log Anti-SLA") +
xlab("Time from Baseline")
ggplot(dat_plot, aes(x = time, y = sla_pred, col = Type)) +
geom_point(size = 2) +
#geom_point(aes(x = time, y = slope_pred), size = 2, col = 2) +
geom_errorbar(aes(ymin=sla_025, ymax=sla_975), width=0.8) +
#geom_errorbar(aes(ymin=slope_025, ymax=slope_975), width=0.8, col = '#00BA38') +
facet_wrap(.~ pat_idx) +
theme_bw() +
theme(text = element_text(size=18)) +
ylab("Log Anti-SLA") +
xlab("Time from Baseline")
