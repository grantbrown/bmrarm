library(magrittr)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(tidyr)
library(coda)
library(ggmcmc)
library(xtable)


setwd("C:\\Users\\Nick\\Dropbox\\_Thesis\\bmrvar\\long_sims")
source("../run_apps_sims//helper_functions.R")

## Collect objects
max_mod <- 4
mod_list <- list()
obs <- c(1:max_mod)
obs <- c(1:4)
for(i in 1:length(obs)){
  mod_list[[i]] <- readRDS(paste0("Z:\\bmrarm\\samples\\ar_model_same_data_small", obs[i], "_siw.RDS"))
  #mod_list[[i]]$samps$res_pat_sig <- mod_list[[i]]$samps$res_pat_sig_q
  print(mod_list[[i]]$runtime)
  #print(effectiveSize(mcmc(mod_list[[i]]$samps$res_cuts[4, ])))
}

# Trace and density plots -------------------------------------------------
par(mfrow=c(2,2))

plot(mod_list[[1]]$samps$res_cuts[4, ], type = "l",
     ylab = expression(gamma[3]), main = expression("Traceplot: " ~ gamma[3]),
     xlab = "Iterations")
lines(mcmc(mod_list[[2]]$samps$res_cuts[4, ]), col = 2)
lines(mcmc(mod_list[[3]]$samps$res_cuts[4, ]), col = 3)
lines(mcmc(mod_list[[4]]$samps$res_cuts[4, ]), col = 4)
text(3350, 1.72, "GR Upper CI = 1.01", cex = 1.2)

max_dens <- max(c(density(mod_list[[1]]$samps$res_cuts[4, ])$y,
                  density(mod_list[[2]]$samps$res_cuts[4, ])$y,
                  density(mod_list[[3]]$samps$res_cuts[4, ])$y))
plot(density(mod_list[[1]]$samps$res_cuts[4, ]), type = "l", lwd = 3,
     ylab = expression(gamma[3]), ylim = c(0, max_dens),
     main = expression("Posterior Density: " ~ gamma[3]))
lines(density(mcmc(mod_list[[2]]$samps$res_cuts[4, ])), col = 2, lwd = 3)
lines(density(mcmc(mod_list[[3]]$samps$res_cuts[4, ])), col = 3, lwd = 3)
lines(density(mcmc(mod_list[[4]]$samps$res_cuts[4, ])), col = 4, lwd = 3)
legend("topright", legend = c("Chain 1", "Chain 2", "Chain 3", "Chain 4"),
       lty = 1, col = 1:4, cex = 1.2, lwd = 3)

plot(mod_list[[1]]$samps$res_cuts[5, ], type = "l",
     ylab = expression(gamma[4]), main = expression("Traceplot: " ~ gamma[4]),
     xlab = "Iterations")
lines(mcmc(mod_list[[2]]$samps$res_cuts[5, ]), col = 2)
lines(mcmc(mod_list[[3]]$samps$res_cuts[5, ]), col = 3)
lines(mcmc(mod_list[[4]]$samps$res_cuts[5, ]), col = 4)
text(3350, 2.15, "GR Upper CI = 1.01", cex = 1.2)

max_dens <- max(c(density(mod_list[[1]]$samps$res_cuts[5, ])$y,
                  density(mod_list[[2]]$samps$res_cuts[5, ])$y,
                  density(mod_list[[3]]$samps$res_cuts[5, ])$y))
plot(density(mod_list[[1]]$samps$res_cuts[5, ]), type = "l", lwd = 3,
     ylab = expression(gamma[4]), ylim = c(0, max_dens),
     main = expression("Posterior Density: " ~ gamma[4]))
lines(density(mcmc(mod_list[[2]]$samps$res_cuts[5, ])), col = 2, lwd = 3)
lines(density(mcmc(mod_list[[3]]$samps$res_cuts[5, ])), col = 3, lwd = 3)
lines(density(mcmc(mod_list[[4]]$samps$res_cuts[5, ])), col = 4, lwd = 3)
legend("topright", legend = c("Chain 1", "Chain 2", "Chain 3", "Chain 4"),
       lty = 1, col = 1:4, cex = 1.2, lwd = 3)

# Covariance terms --------------------------------------------------------

par(mfrow=c(3,2))

plot(mod_list[[1]]$samps$res_sigma[1, ], type = "l",
     ylab = expression(R[11]), main = expression("Traceplot: " ~ R[11]),
     xlab = "Iterations")
lines(mcmc(mod_list[[2]]$samps$res_sigma[1, ]), col = 2)
lines(mcmc(mod_list[[3]]$samps$res_sigma[1, ]), col = 3)
lines(mcmc(mod_list[[4]]$samps$res_sigma[1, ]), col = 4)
text(3350, 0.625, "GR Upper CI = 1.01", cex = 1.2)

max_dens <- max(c(density(mod_list[[4]]$samps$res_sigma[1, ])$y,
                  density(mod_list[[2]]$samps$res_sigma[1, ])$y,
                  density(mod_list[[3]]$samps$res_sigma[1, ])$y))
plot(density(mod_list[[1]]$samps$res_sigma[1, ]), type = "l", lwd = 3,
     ylab = expression(R[11]), ylim = c(0, max_dens),
     main = expression("Posterior Density: " ~ R[11]))
lines(density(mcmc(mod_list[[2]]$samps$res_sigma[1, ])), col = 2, lwd = 3)
lines(density(mcmc(mod_list[[3]]$samps$res_sigma[1, ])), col = 3, lwd = 3)
lines(density(mcmc(mod_list[[4]]$samps$res_sigma[1, ])), col = 4, lwd = 3)
legend("topright", legend = c("Chain 1", "Chain 2", "Chain 3", "Chain 4"),
       lty = 1, col = 1:4, cex = 1.2, lwd = 3)

max_dens <- max(c(density(mod_list[[4]]$samps$res_pat_sig[1, ])$y,
                  density(mod_list[[2]]$samps$res_pat_sig[1, ])$y,
                  density(mod_list[[3]]$samps$res_pat_sig[1, ])$y))
plot(mod_list[[1]]$samps$res_pat_sig[1, ], type = "l",
     ylab = expression(Sigma[alpha][11]), main = expression("Traceplot: " ~ Sigma[alpha][11]),
     xlab = "Iterations")
lines(mcmc(mod_list[[2]]$samps$res_pat_sig[1, ]), col = 2)
lines(mcmc(mod_list[[3]]$samps$res_pat_sig[1, ]), col = 3)
lines(mcmc(mod_list[[4]]$samps$res_pat_sig[1, ]), col = 4)
text(3350, 0.605, "GR Upper CI = 1.01", cex = 1.2)

plot(density(mod_list[[1]]$samps$res_pat_sig[1, ]), type = "l", lwd = 3,
     ylab = expression(Sigma[alpha][11]), ylim = c(0, max_dens),
     main = expression("Posterior Density: " ~ Sigma[alpha][11]))
lines(density(mcmc(mod_list[[2]]$samps$res_pat_sig[1, ])), col = 2, lwd = 3)
lines(density(mcmc(mod_list[[3]]$samps$res_pat_sig[1, ])), col = 3, lwd = 3)
lines(density(mcmc(mod_list[[4]]$samps$res_pat_sig[1, ])), col = 4, lwd = 3)
legend("topright", legend = c("Chain 1", "Chain 2", "Chain 3", "Chain 4"),
       lty = 1, col = 1:4, cex = 1.2, lwd = 3)

# Covariance terms --------------------------------------------------------

max_dens <- max(c(density(mod_list[[4]]$samps$res_pat_sig[6, ])$y,
                  density(mod_list[[2]]$samps$res_pat_sig[6, ])$y,
                  density(mod_list[[3]]$samps$res_pat_sig[6, ])$y))
plot(mod_list[[1]]$samps$res_pat_sig[6, ], type = "l",
     ylab = expression(Sigma[alpha][22]), main = expression("Traceplot: " ~ Sigma[alpha][22]),
     xlab = "Iterations")
lines(mcmc(mod_list[[2]]$samps$res_pat_sig[6, ]), col = 2)
lines(mcmc(mod_list[[3]]$samps$res_pat_sig[6, ]), col = 3)
lines(mcmc(mod_list[[4]]$samps$res_pat_sig[6, ]), col = 4)
text(3350, 0.245, "GR Upper CI = 1.01", cex = 1.2)

plot(density(mod_list[[1]]$samps$res_pat_sig[6, ]), type = "l", lwd = 3,
     ylab = expression(Sigma[alpha][22]), ylim = c(0, max_dens),
     main = expression("Posterior Density: " ~ Sigma[alpha][22]))
lines(density(mcmc(mod_list[[2]]$samps$res_pat_sig[6, ])), col = 2, lwd = 3)
lines(density(mcmc(mod_list[[3]]$samps$res_pat_sig[6, ])), col = 3, lwd = 3)
lines(density(mcmc(mod_list[[4]]$samps$res_pat_sig[6, ])), col = 4, lwd = 3)
legend("topright", legend = c("Chain 1", "Chain 2", "Chain 3", "Chain 4"),
       lty = 1, col = 1:4, cex = 1.2, lwd = 3)


max_dens <- max(c(density(mod_list[[4]]$samps$res_pat_sig[11, ])$y,
                  density(mod_list[[2]]$samps$res_pat_sig[11, ])$y,
                  density(mod_list[[3]]$samps$res_pat_sig[11, ])$y))
plot(mod_list[[1]]$samps$res_pat_sig[11, ], type = "l",
     ylab = expression(Sigma[alpha][11]), main = expression("Traceplot: " ~ Sigma[alpha][11]),
     xlab = "Iterations")
lines(mcmc(mod_list[[2]]$samps$res_pat_sig[11, ]), col = 2)
lines(mcmc(mod_list[[3]]$samps$res_pat_sig[11, ]), col = 3)
lines(mcmc(mod_list[[4]]$samps$res_pat_sig[11, ]), col = 4)
text(3350, 0.635, "GR Upper CI = 1.00", cex = 1.2)

plot(density(mod_list[[1]]$samps$res_pat_sig[11, ]), type = "l", lwd = 3,
     ylab = expression(Sigma[alpha][11]), ylim = c(0, max_dens),
     main = expression("Posterior Density: " ~ Sigma[alpha][11]))
lines(density(mcmc(mod_list[[2]]$samps$res_pat_sig[11, ])), col = 2, lwd = 3)
lines(density(mcmc(mod_list[[3]]$samps$res_pat_sig[11, ])), col = 3, lwd = 3)
lines(density(mcmc(mod_list[[4]]$samps$res_pat_sig[11, ])), col = 4, lwd = 3)
legend("topright", legend = c("Chain 1", "Chain 2", "Chain 3", "Chain 4"),
       lty = 1, col = 1:4, cex = 1.2, lwd = 3)

max_dens <- max(c(density(mod_list[[4]]$samps$res_pat_sig[16, ])$y,
                  density(mod_list[[2]]$samps$res_pat_sig[16, ])$y,
                  density(mod_list[[3]]$samps$res_pat_sig[16, ])$y))
plot(mod_list[[1]]$samps$res_pat_sig[16, ], type = "l",
     ylab = expression(Sigma[alpha][16]), main = expression("Traceplot: " ~ Sigma[alpha][11]),
     xlab = "Iterations")
lines(mcmc(mod_list[[2]]$samps$res_pat_sig[16, ]), col = 2)
lines(mcmc(mod_list[[3]]$samps$res_pat_sig[16, ]), col = 3)
lines(mcmc(mod_list[[4]]$samps$res_pat_sig[16, ]), col = 4)
text(3350, 0.635, "GR Upper CI = 1.00", cex = 1.2)

plot(density(mod_list[[1]]$samps$res_pat_sig[16, ]), type = "l", lwd = 3,
     ylab = expression(Sigma[alpha][16]), ylim = c(0, max_dens),
     main = expression("Posterior Density: " ~ Sigma[alpha][16]))
lines(density(mcmc(mod_list[[2]]$samps$res_pat_sig[16, ])), col = 2, lwd = 3)
lines(density(mcmc(mod_list[[3]]$samps$res_pat_sig[16, ])), col = 3, lwd = 3)
lines(density(mcmc(mod_list[[4]]$samps$res_pat_sig[16, ])), col = 4, lwd = 3)
legend("topright", legend = c("Chain 1", "Chain 2", "Chain 3", "Chain 4"),
       lty = 1, col = 1:4, cex = 1.2, lwd = 3)

# Diagnostic Tests for thresholds and sigma --------------------------------------------------------

gelman.diag(mcmc.list(mcmc(mod_list[[1]]$samps$res_cuts[4, ]),
                      mcmc(mod_list[[2]]$samps$res_cuts[4, ]),
                      mcmc(mod_list[[3]]$samps$res_cuts[4, ]),
                      mcmc(mod_list[[4]]$samps$res_cuts[4, ])))[[1]][, 2]

gelman.diag(mcmc.list(mcmc(mod_list[[1]]$samps$res_cuts[5, ]),
                      mcmc(mod_list[[2]]$samps$res_cuts[5, ]),
                      mcmc(mod_list[[3]]$samps$res_cuts[5, ]),
                      mcmc(mod_list[[4]]$samps$res_cuts[5, ])))[[1]][, 2]

gelman.diag(mcmc.list(mcmc(t(mod_list[[1]]$samps$res_pat_sig[c(1, 6, 11, 16), ])),
                      mcmc(t(mod_list[[2]]$samps$res_pat_sig[c(1, 6, 11, 16), ])),
                      mcmc(t(mod_list[[3]]$samps$res_pat_sig[c(1, 6, 11, 16), ])),
                      mcmc(t(mod_list[[4]]$samps$res_pat_sig[c(1, 6, 11, 16), ]))))[[1]][, 2]

gelman.diag(mcmc.list(mcmc(t(mod_list[[1]]$samps$res_sigma)),
                      mcmc(t(mod_list[[2]]$samps$res_sigma)),
                      mcmc(t(mod_list[[3]]$samps$res_sigma)),
                      mcmc(t(mod_list[[4]]$samps$res_sigma))), multivariate = F)

gelman.diag(mcmc.list(mcmc(mod_list[[1]]$samps$res_sigma[4, ]),
                      mcmc(mod_list[[2]]$samps$res_sigma[4, ]),
                      mcmc(mod_list[[3]]$samps$res_sigma[4, ]),
                      mcmc(mod_list[[4]]$samps$res_sigma[4, ])))

gelman.diag(mcmc.list(mcmc(mod_list[[1]]$samps$res_pat_sig[1, ]),
                      mcmc(mod_list[[2]]$samps$res_pat_sig[1, ]),
                      mcmc(mod_list[[3]]$samps$res_pat_sig[1, ]),
                      mcmc(mod_list[[4]]$samps$res_pat_sig[1, ])))

# Make table of posterior estimates ---------------------------------------
mcmc_summ <- function(x) {
  summ <- summary(mcmc(x))
  c(summ[[1]][1], summ[[1]][2], summ[[2]][1], summ[[2]][5],effectiveSize(mcmc(x)))
}

gamma3 <- t(sapply(1:4, function(x) mcmc_summ(mod_list[[x]]$samps$res_cuts[4, ])))
gamma4 <- t(sapply(1:4, function(x) mcmc_summ(mod_list[[x]]$samps$res_cuts[5, ])))
sig11 <- t(sapply(1:4, function(x) mcmc_summ(mod_list[[x]]$samps$res_sigma[1, ])))
sig_alpha11 <- t(sapply(1:4, function(x) mcmc_summ(mod_list[[x]]$samps$res_pat_sig[1, ])))
sig_alpha22 <- t(sapply(1:4, function(x) mcmc_summ(mod_list[[x]]$samps$res_pat_sig[6, ])))
full_tab_res <- rbind(gamma3, gamma4, sig11, sig_alpha11, sig_alpha22)
df <- data.frame(param = c("gamma3", rep("", 3), "gamm4", rep("", 3),
                           "sig11", rep("", 3), "sig_alpha11", rep("", 3),
                           "sig_alpha22", rep("", 3)),
                 chain = rep(1:4, 5), full_tab_res,
                 gelman_rubin = c("1.010", rep("", 3), "1.015", rep("", 3),
                                  "1.008", rep("", 3), "1.006", rep("", 3),
                                  "1.012", rep("", 3)))

print(xtable(df, type = "latex", digits = c(1, 1, 1, 2, 3, 2, 2, 2, 1)),
      include.rownames = F, include.colnames = F)


# Diagnostic Tests for other parameters ----------------------------------------

gelman.diag(mcmc.list(mcmc(t(mod_list[[1]]$samps$res_cuts)),
                      mcmc(t(mod_list[[2]]$samps$res_cuts)),
                      mcmc(t(mod_list[[3]]$samps$res_cuts)),
                      mcmc(t(mod_list[[4]]$samps$res_cuts))), multivariate = F)[[1]]

gelman.diag(mcmc.list(mcmc(t(mod_list[[1]]$samps$res_sigma)),
                      mcmc(t(mod_list[[2]]$samps$res_sigma)),
                      mcmc(t(mod_list[[3]]$samps$res_sigma)),
                      mcmc(t(mod_list[[4]]$samps$res_sigma))), multivariate = F)[[1]]

gelman.diag(mcmc.list(mcmc(t(mod_list[[1]]$samps$res_pat_sig)),
                      mcmc(t(mod_list[[2]]$samps$res_pat_sig)),
                      mcmc(t(mod_list[[3]]$samps$res_pat_sig)),
                      mcmc(t(mod_list[[4]]$samps$res_pat_sig))), multivariate = F)[[1]]

gelman.diag(mcmc.list(mcmc(t(mod_list[[1]]$samps$res_beta)),
                      mcmc(t(mod_list[[2]]$samps$res_beta)),
                      mcmc(t(mod_list[[3]]$samps$res_beta)),
                      mcmc(t(mod_list[[4]]$samps$res_beta))), multivariate = F)

gelman.diag(mcmc.list(mcmc(t(mod_list[[1]]$samps$res_pat_eff[,1,])),
                      mcmc(t(mod_list[[2]]$samps$res_pat_eff[,1,])),
                      mcmc(t(mod_list[[3]]$samps$res_pat_eff[,1,])),
                      mcmc(t(mod_list[[4]]$samps$res_pat_eff[,1,]))), multivariate = T)

gelman.diag(mcmc.list(mcmc(t(mod_list[[1]]$samps$res_pat_eff[,3,])),
                      mcmc(t(mod_list[[2]]$samps$res_pat_eff[,3,])),
                      mcmc(t(mod_list[[3]]$samps$res_pat_eff[,3,])),
                      mcmc(t(mod_list[[4]]$samps$res_pat_eff[,3,]))), multivariate = T)

gelman.diag(mcmc.list(mcmc(t(mod_list[[1]]$samps$res_pat_eff[,2,])),
                      mcmc(t(mod_list[[2]]$samps$res_pat_eff[,2,])),
                      mcmc(t(mod_list[[3]]$samps$res_pat_eff[,2,])),
                      mcmc(t(mod_list[[4]]$samps$res_pat_eff[,2,]))), multivariate = T)

gelman.diag(mcmc.list(mcmc(t(mod_list[[1]]$samps$res_pat_eff[,4,])),
                      mcmc(t(mod_list[[2]]$samps$res_pat_eff[,4,])),
                      mcmc(t(mod_list[[3]]$samps$res_pat_eff[,4,])),
                      mcmc(t(mod_list[[4]]$samps$res_pat_eff[,4,]))), multivariate = T)


gelman.diag(mcmc.list(mcmc(t(mod_list[[1]]$samps$res_y[,1,])),
                      mcmc(t(mod_list[[2]]$samps$res_y[,1,])),
                      mcmc(t(mod_list[[3]]$samps$res_y[,1,])),
                      mcmc(t(mod_list[[4]]$samps$res_y[,1,]))), multivariate = T)

# Hiedel Diag Tests for other parameters ----------------------------------------

heidel.diag(mcmc(t(mod_list[[1]]$samps$res_sigma)))
heidel.diag(mcmc(t(mod_list[[2]]$samps$res_sig_pat)))
heidel.diag(mcmc(t(mod_list[[3]]$samps$res_sigma)))
heidel.diag(mcmc(t(mod_list[[1]]$samps$res_pat_sig)))
heidel.diag(mcmc(t(mod_list[[2]]$samps$res_pat_sig)))
heidel.diag(mcmc(t(mod_list[[3]]$samps$res_pat_sig)))
heidel.diag(mcmc(t(mod_list[[4]]$samps$res_pat_sig)))
plot(mod_list[[3]]$samps$res_pat_sig[4, ], type = "l")


heidel.diag(mcmc.list(mcmc(t(mod_list[[1]]$samps$res_pat_sig)),
                      mcmc(t(mod_list[[2]]$samps$res_pat_sig)),
                      mcmc(t(mod_list[[3]]$samps$res_pat_sig)),
                      mcmc(t(mod_list[[4]]$samps$res_pat_sig))), multivariate = F)

gelman.diag(mcmc.list(mcmc(t(mod_list[[1]]$samps$res_beta)),
                      mcmc(t(mod_list[[2]]$samps$res_beta)),
                      mcmc(t(mod_list[[3]]$samps$res_beta)),
                      mcmc(t(mod_list[[4]]$samps$res_beta))), multivariate = F)

gelman.diag(mcmc.list(mcmc(t(mod_list[[1]]$samps$res_pat_eff[,1,])),
                      mcmc(t(mod_list[[2]]$samps$res_pat_eff[,1,])),
                      mcmc(t(mod_list[[3]]$samps$res_pat_eff[,1,])),
                      mcmc(t(mod_list[[4]]$samps$res_pat_eff[,1,]))), multivariate = F)

gelman.diag(mcmc.list(mcmc(t(mod_list[[1]]$samps$res_pat_eff[,3,])),
                      mcmc(t(mod_list[[2]]$samps$res_pat_eff[,3,])),
                      mcmc(t(mod_list[[3]]$samps$res_pat_eff[,3,])),
                      mcmc(t(mod_list[[4]]$samps$res_pat_eff[,3,]))), multivariate = F)

gelman.diag(mcmc.list(mcmc(t(mod_list[[1]]$samps$res_y[,1,])),
                      mcmc(t(mod_list[[2]]$samps$res_y[,1,])),
                      mcmc(t(mod_list[[3]]$samps$res_y[,1,])),
                      mcmc(t(mod_list[[4]]$samps$res_y[,1,]))), multivariate = F)

summary(mcmc(t(mod_list[[4]]$samps$res_cuts)))[[2]][4:5, c(1, 3, 5)]
summary(mcmc(t(mod_list[[4]]$samps$res_pat_sig)))[[2]][c(1, 6, 11), 3]
summary(mcmc(t(mod_list[[4]]$samps$res_sigma)))[[2]][, 3]
summary(mcmc(t(mod_list[[3]]$samps$res_sigma)))[[1]][, 1]


# Covariance terms --------------------------------------------------------
library(rstan)
Rhat(cbind(mod_list[[1]]$samps$res_pat_sig[6, ],
           mod_list[[2]]$samps$res_pat_sig[6, ],
           mod_list[[3]]$samps$res_pat_sig[6, ],
           mod_list[[4]]$samps$res_pat_sig[6, ]))

Rhat(cbind(mod_list[[1]]$samps$res_cuts[5, ],
           mod_list[[2]]$samps$res_cuts[5, ],
           mod_list[[3]]$samps$res_cuts[5, ],
           mod_list[[4]]$samps$res_cuts[5, ]))

ess_bulk(cbind(mod_list[[1]]$samps$res_pat_sig[1, ],
           mod_list[[2]]$samps$res_pat_sig[1, ],
           mod_list[[3]]$samps$res_pat_sig[4, ],
           mod_list[[4]]$samps$res_pat_sig[4, ]))

ess_tail(cbind(mod_list[[1]]$samps$res_pat_sig[4, ],
               mod_list[[2]]$samps$res_pat_sig[4, ],
               mod_list[[3]]$samps$res_pat_sig[4, ],
               mod_list[[4]]$samps$res_pat_sig[4, ]))

plot(mod_list[[1]]$samps$res_pat_sig[3, ], type = "l",
     ylab = expression(R[11]), main = expression("Traceplot: " ~ R[11]),
     xlab = "Iterations")
lines(mcmc(mod_list[[2]]$samps$res_pat_sig[3, ]), col = 2)
lines(mcmc(mod_list[[3]]$samps$res_pat_sig[3, ]), col = 3)
lines(mcmc(mod_list[[4]]$samps$res_pat_sig[3, ]), col = 4)
text(3350, 0.795, "GR Upper CI = 1.01", cex = 1.2)

plot(density(mod_list[[1]]$samps$res_pat_sig[3, ]), type = "l", lwd = 3,
     ylab = expression(R[11]),
     main = expression("Posterior Density: " ~ R[11]),
     ylim = c(0, 11))
lines(density(mcmc(mod_list[[2]]$samps$res_pat_sig[3, ])), col = 2, lwd = 3)
lines(density(mcmc(mod_list[[3]]$samps$res_pat_sig[3, ])), col = 3, lwd = 3)
lines(density(mcmc(mod_list[[4]]$samps$res_pat_sig[3, ])), col = 4, lwd = 3)
legend("topright", legend = c("Chain 1", "Chain 2", "Chain 3", "Chain 4"),
       lty = 1, col = 1:4, cex = 1.2, lwd = 3)

plot(mod_list[[1]]$samps$res_pat_sig[4, ], type = "l",
     ylab = expression(R[11]), main = expression("Traceplot: " ~ R[11]),
     xlab = "Iterations")
lines(mcmc(mod_list[[2]]$samps$res_pat_sig[4, ]), col = 2)
lines(mcmc(mod_list[[3]]$samps$res_pat_sig[4, ]), col = 3)
lines(mcmc(mod_list[[4]]$samps$res_pat_sig[4, ]), col = 4)
text(3350, 0.795, "GR Upper CI = 1.01", cex = 1.2)

plot(density(mod_list[[1]]$samps$res_pat_sig[4, ]), type = "l", lwd = 3,
     ylab = expression(R[11]),
     main = expression("Posterior Density: " ~ R[11]))
lines(density(mcmc(mod_list[[2]]$samps$res_pat_sig[4, ])), col = 2, lwd = 3)
lines(density(mcmc(mod_list[[3]]$samps$res_pat_sig[4, ])), col = 3, lwd = 3)
lines(density(mcmc(mod_list[[4]]$samps$res_pat_sig[4, ])), col = 4, lwd = 3)
legend("topright", legend = c("Chain 1", "Chain 2", "Chain 3", "Chain 4"),
       lty = 1, col = 1:4, cex = 1.2, lwd = 3)
