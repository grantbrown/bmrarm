i <- as.numeric(commandArgs(TRUE))

#require(devtools)
#remotes::install_github("nickseedorff/brmarm")
library(bmrarm)
library(dplyr)

N_obs <- 625
sims <- 20000
burn <- 4000

################################################################################
# Models with AR data
################################################################################

# Normal Size -------------------------------------------------------------

sim_data <- bmrarm:::gen_single(N = N_obs, seed = i)
dat <- sim_data$data %>%
  select(y2, y3, y_ord, y_ord2, x1, obs_num, pat_idx) %>%
  filter(row_number() <= 500)

# start_time <- Sys.time()
# samps <- bmrvarx(formula = cbind(y_ord, y2, y3) ~ x1,
#                  data = dat, nsim = sims, burn_in = burn, seed = i,
#                  ordinal_outcomes = c("y_ord"), thin = 8, fast = T, max_iter_rej = 10000)
#
# f_out <- paste0("./bmrvarx_final_samples//bmrvarx_sim", i, ".RDS")
# saveRDS(list(samps = samps, data = sim_data, df_used = dat,
#              runtime = Sys.time() - start_time), file = f_out)

start_time <- Sys.time()
samps <- bmrvarx(formula = cbind(y_ord, y_ord2, y3) ~ x1,
                 data = dat, nsim = sims, burn_in = burn, seed = i,
                 ordinal_outcomes = c("y_ord", "y_ord2"), thin = 8, fast = T, max_iter_rej = 10000)

f_out <- paste0("./bmrvarx_final_samples//bmrvarx_sim_bi", i, "new.RDS")
saveRDS(list(samps = samps, data = sim_data, df_used = dat,
             runtime = Sys.time() - start_time), file = f_out)


################################################################################
# Models with AR data
################################################################################

# Normal Size -------------------------------------------------------------

dat <- sim_data$data_no_miss %>%
  select(y1, y2, y3, y_ord, y_ord2, x1, obs_num, pat_idx) %>%
  filter(row_number() <= 500)
x_pred <- matrix(sim_data$data_no_miss$x1[501:525], ncol = 1)
truth <- sim_data$data_no_miss$y3[501:525]

# Fit bmrvarx model -------------------------------------------------------

start_time <- Sys.time()
samps <- bmrvarx(formula = cbind(y_ord, y_ord2, y3) ~ x1,
                 data = dat, nsim = sims, burn_in = burn, seed = i,
                 ordinal_outcomes = c("y_ord", "y_ord2"), thin = 8, fast = T,
                 max_iter_rej = 10000)

preds <- bmrarm:::get_preds(samps, steps_ahead = 25, X = x_pred,
                            seed = i)$cont_preds_last

summ <- t(apply(preds, 2, function(x) c(mean(x), sd(x), quantile(x, 0.025),
                                        quantile(x, 0.975))))
df <- as.data.frame(cbind(truth, summ))

colnames(df) <- c("truth", "mean", "sd", "q025", "q975")
df$sq_error <- (df$truth - df$mean) ^ 2

f_out <- paste0("./bmrvarx_final_samples//preds_bmrvarx", i, "new.RDS")
saveRDS(list(samps = samps, data = sim_data, df_used = dat,
             runtime = Sys.time() - start_time, preds = df),
        file = f_out)

preds_varx <- df

# Fit bvar true model -------------------------------------------------------

start_time <- Sys.time()
samps <- bmrarm:::bvar(formula = cbind(y1, y2, y3) ~ x1,
                       data = dat, nsim = 5000, burn_in = 2000, seed = i, thin = 1)
last_dat <- matrix(rep(as.numeric(dat[500, 1:3]), each = 3000), nrow = 3, byrow = T)
samps$data_for_forecasts[[1]] <- last_dat
preds <- bmrarm:::get_preds(samps, steps_ahead = 25, X = x_pred,
                            seed = i)$cont_preds_last

summ <- t(apply(preds, 2, function(x) c(mean(x), sd(x), quantile(x, 0.025),
                                        quantile(x, 0.975))))
df <- as.data.frame(cbind(truth, summ))

colnames(df) <- c("truth", "mean", "sd", "q025", "q975")
df$sq_error <- (df$truth - df$mean) ^ 2

f_out <- paste0("./bmrvarx_final_samples//preds_bvar_true", i, "new.RDS")
saveRDS(list(samps = samps, data = sim_data, df_used = dat,
             runtime = Sys.time() - start_time, preds = df),
        file = f_out)

preds_bvar <- df

# Fit discrete true model -------------------------------------------------------

start_time <- Sys.time()
samps <- bmrarm:::bvar(formula = cbind(y_ord, y_ord2, y3) ~ x1,
                       data = dat, nsim = 5000, burn_in = 2000, seed = i, thin = 1)
last_dat <- matrix(rep(as.numeric(dat[500, c(4, 5)]), each = 3000), nrow = 3, byrow = T)
samps$data_for_forecasts[[1]] <- last_dat
preds <- bmrarm:::get_preds(samps, steps_ahead = 25, X = x_pred,
                            seed = i)$cont_preds_last

summ <- t(apply(preds, 2, function(x) c(mean(x), sd(x), quantile(x, 0.025),
                                        quantile(x, 0.975))))
df <- as.data.frame(cbind(truth, summ))

colnames(df) <- c("truth", "mean", "sd", "q025", "q975")
df$sq_error <- (df$truth - df$mean) ^ 2

f_out <- paste0("./bmrvarx_final_samples//preds_bvar_discrete", i, "new.RDS")
saveRDS(list(samps = samps, data = sim_data, df_used = dat,
             runtime = Sys.time() - start_time, preds = df),
        file = f_out)

preds_bvar_discrete <- df

# Fit ar1 model -----------------------------------------------------------
start_time <- Sys.time()
fit <- arima(dat$y3, order = c(1, 0, 0), xreg = dat$x1)
fit_pred <- predict(fit, newxreg = x_pred, se.fit = T)

df$mean <- fit_pred$pred
df$sq_error <- (df$truth - df$mean) ^ 2
df$sd <- NA
df$q025 <- NA
df$q975 <- NA

f_out <- paste0("./bmrvarx_final_samples//preds_freq", i, "new.RDS")
saveRDS(list(samps = samps, data = sim_data, df_used = dat,
             runtime = Sys.time() - start_time, preds = df),
        file = f_out)

all_preds <- list(preds_varx = preds_varx,
                  preds_bvar = preds_bvar,
                  preds_bvar_discrete = preds_bvar_discrete,
                  preds_freq = df)

f_out <- paste0("./bmrvarx_final_samples//all_preds", i, "new.RDS")
saveRDS(all_preds, f_out)
